<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[窗帘上有小爪印]]></title>
      <url>https://blog.thrimbda.com/2020/09/12/2020-09-13-%E7%AA%97%E5%B8%98%E4%B8%8A%E6%9C%89%E5%B0%8F%E7%88%AA%E5%8D%B0/</url>
      <content type="html"><![CDATA[<p>前段时间我回到了苏州，葡萄没有跟着我回来，在关灯准备睡觉的当口发现在窗帘上有几处深深的小爪印，我终于没忍住，深夜中从床上爬了起来，思量起葡萄独自在家的大半个月——时间以及伴随着时间流淌着的，在生活中影响了我的事物。</p>
<a id="more"></a>
<p>前文中我们探讨过时间的形状，它的力量，它的顽皮和嘲弄；其中有一点特别需要强调：那就是时间流逝的速度由于人的不同状态因此也是不同的——我和帮主观察到最近它似乎是指数级变快：以至于今年的一半似乎是一瞬间就过完的；然而仔细想想，似乎去年也是如此。我总是认为这才从上次的文章写完之后没过多久，却已经一年有余。</p>
<p>这一年虽然快，却也丰沛，然而除却丰沛，还多了生活的气息，和对生活的见证。</p>
<p>而这一切也的确始于一年多前，始于时间还未加速的日子，始于一本书，一位建筑师将自己写进了书中。</p>
<hr>
<p>在这一年的2月11日，daidai发了我一张图，是一本书的封面，上面写着：<code>一部自传：弗兰克·劳埃德·赖特</code>。</p>
<p><img src="https://blog.thrimbda.com/uploads/2020/09/13/frank.jpg" alt="Frank"></p>
<p>“你会喜欢的。”</p>
<p>于是这位痛恨多愁善感却又细腻丰沛的建筑师活在了我的脑子里。</p>
<p>通过重温他的生活，他教给了我两件重要的事情，用以见证这个世界：</p>
<p>第一是<strong>风格</strong>，风格的形成需要时间来催化，我们首先需要扎实地做好那些基本的事情，达到从心所欲而不逾矩的境界，拿骑自行车来打比方：到最后你不需要用双手去操控方向，而是用身体，或者是用心，心里想着从非机动车道上的实线上压过去便绝不会偏航。在基础搭好之后，就是一个具体的创作过程了，面对一个问题领域，提出那些个在关键路径上困扰着我们的问题，然后运用之前打好的基础去解决问题或是抒发情感。</p>
<p><strong>在我们画上句号的那一刻，风格则会悄然到来，此时要做的便是迎接和欣赏，这是一个喜悦的时刻。</strong></p>
<p>风格是是什么呢，像是触碰的到的客观世界中的色彩，拿梵高的画作来说，他会夸张地表达这个世界中存在的一些现象，毫不吝惜自己的油墨，在某些部分也可以说是相当潦草，形成了强烈的辨识度，这种辨识度应当说是风格的体现。然而每个人都会以不同的方式去欣赏这种美感，去欣赏他的画，或者甚至不以之为美；是否对于风格的理解是一种完全的主观感受呢？</p>
<p>什么是好的风格呢？这就引出了建筑师谈到的第二件重要的事情：<strong>品位</strong>。谁具备这样好的品位，使得他可以欣赏某件具体的艺术作品，并尝到其中呼之欲出的风格？</p>
<p>像是梵高笔下的柏树和星月夜；济慈诗里夜莺令人魂牵梦绕的歌声；贝多芬如诗如画，生意盎然的第六交响曲；这些被公认优秀的作品，每一项都别具一格，却都具备着一股坚实曼妙的力量，可以跨越时空，可以跨越人心的屏障，使人坚定；给予人以意义，赋予生命以连贯性。</p>
<p><img src="https://blog.thrimbda.com/uploads/2020/09/13/Country_road_in_Provence_by_night.jpg" alt="country road in Provence by night"></p>
<p>然而欣赏这些作品无疑需要某种程度的训练，拿忧郁颂举例子：<code>Aye, in the very temple of delight, Veil&#39;d Melancholy has her sovran shrine</code>——在欢乐的殿堂中，隐藏的忧郁有着她至尊的神龛。当我第一次读到的时候，正是刚刚拥有了成年人的心智却又涉世未深的年纪，只觉得这句诗想表达的意思很隐晦；而随着我了解到济慈的生平，以及自己也慢慢开始像生命中的忧郁神龛祭拜了之后，它才开始以一种独一无二的方式生长在我的心中。</p>
<p>或者拿戏剧举例子：<code>“为什么海森堡会在1941年回到哥本哈根？”</code>，为什么在那次哥本哈根波尔家中的短暂会面会终结海森堡和波尔长达二十年的友谊？这个萦绕了大众半个多世纪的问题，在话剧《哥本哈根》中，作为线索，构成了整个话剧的背景和框架基石，实则以巧妙的方式演绎着人的内心究竟有多么复杂，在单个塌缩于现实空间的具体决定和行为背后，可能藏着十数个或者数十个处于叠加态的动机。</p>
<p>海森堡是波尔一家的老朋友，也同时是一个分享着战争罪行的德国人；他像是波尔最优秀的儿子，也同时自己肩负着丈夫和父亲的角色；而他的动机则比他的身份还多：是因为海森堡想阻止核武器的诞生，是因为海森堡想肩负起复兴整个德意志科学界的重担，是因为海森堡成为了整个德意志最年轻的教授，还是因为海森堡单纯地像个想家的孩子，或者海森堡自己根本就不知道为什么要来，而这种迷茫混沌的状态则随着链式反应指数级地扩大，最终拯救了所有没有被轴心德国用核武器轰炸的城市。人啊！是一组矛盾的集合！</p>
<p><img src="https://blog.thrimbda.com/uploads/2020/09/13/copenhagen.jpg" alt="Copenhagen"></p>
<p>在2018年的夏天，小狮带着我去北大校园看了这部话剧，从此它就在我心头挥之不去，并随着我一遍一遍地重温变得更加丰富。这也许就是构建品位的过程：先是进入我的记忆中，并伴随着生活的进行，话剧中的一幕幕在现实中以各种不同却又相通的方式演绎，于是我便能够进一步欣赏它；同时它也指导着我的现实生活，对于其他人的决定背后的那十数种动机给予同等的尊重。</p>
<p>那么什么是品味呢？</p>
<p>你可以说品位完全是教条的，是一套逻辑自洽的虚拟系统，从而在人与人的心中搭起一座座桥梁，而这些桥梁的目的地则完全不受限制，你也可以说品位应当是客观的，它超越了人的好恶，只应是现实世界在人心中的映像。</p>
<p>建筑师没有给出答案，他只是默认品位存在。教条也好，还是客观的存在也好，其实是矛盾而统一的，它必反应了现实中的某种属性，几乎不与现实相悖，也同时没有止步于现实和机械唯物主义。它为人类的理性和审美作出指引，它于现实的环境之上构造了文明。这些丰富的作品给我提供了原材料，如同诗歌一般，初次见面也许并不理解，但时常回想，时常回响，也就构成了我的品位。</p>
<p>风格和品位如同<code>apply</code>和<code>eval</code>一样，道法自然，构建了建筑师坎坷而丰饶的一生。</p>
<p><em>在我每次翻开那本自传的时候，无论心情几何，最终都会归于一种和谐的恬静。一个人应当如何度过他的一生？希望像建筑师一样丰沛。</em></p>
<hr>
<p>当我读到弗兰克最终决定加入沙利文的事务所，向从前的老板说再见的时候，他在自传中有一段这样的描述：</p>
<p><img src="https://blog.thrimbda.com/uploads/2020/09/13/pain.jpg" alt="Pain"></p>
<p>这一幕在我的记忆中存着良久，直到我也有了类似的经历，才知道做了的准备全无用处，阵痛来的出乎意料。就如同窗帘上的小爪印那样，葡萄在我不在的日夜里，无数次走到飘窗上，用小爪子挠着窗帘，认真地希望着在她挠下去的一刹那我会出现在窗帘后面回击回应，她挠着挠着，因为太长时间没有修剪而尖锐的爪子勾住了窗帘，拉出一道道小爪印。</p>
]]></content>
      
        <categories>
            
            <category> 随笔 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 感悟 </tag>
            
            <tag> 书 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Bryan的告别]]></title>
      <url>https://blog.thrimbda.com/2019/06/09/Bryan%E7%9A%84%E5%91%8A%E5%88%AB/</url>
      <content type="html"><![CDATA[<p>在五月的最后一天，我意识到Bryan走了。</p>
<a id="more"></a>
<p>没什么证据能够证明Bryan的离去，我们不需要告别，所以他的离开也没有确切的时间。</p>
<p>意识到这一点的时候，是在下班的路上。那晚我走在清华对面，十点多车棚应该已经锁了，所以我决定把车子留在单位，执行晚下班的routine：橙汁，和足以覆盖掉街上嘈杂声音的音乐，再加上一点点悠闲。大概二百来米之后，走过清华东路上唯一能够看到满月的地方，这个念头钻进我的脑海——Bryan好像离开了。</p>
<p>下楼的时候我看到两个人随性地盘腿坐在大楼门口石狮子旁边的大理石台子上聊天，好像拿着酒。我只敢瞟一眼，直视的目光也许不太礼貌，也许即使我真的盯着看他们也不在乎，但至少我得呵护好自己心中这两个难得的人的镜像。他们在聊什么，是否有关于当下、过去、和未来？是不期而遇呢，还是在赴一个不算太久的约定？我无从得知，转头走进了便利店用橙汁和他们遥遥干杯。</p>
<p>清华东路据我观察是有坡度的，或者据S的说法仅仅是因为上班总是让人有点抗拒的原因，回家的路走起来要轻松一些。我的注意力转移到脑海深处，思量起另一个我没有得到的告别，思量起室友不辞而别的原因。我们一早商量好了续租房子的问题，结论是他要搬走，没想到在那天早上我醒来之后，头天还一起玩植物大战僵尸的室友连同他生活过的痕迹一起消失了，你很难不去想是不是自己做错了什么，开始想象如果对于他真正的朋友，他会怎么做呢——但从不辞而别这一个小前提看来我显然已经是不够格的朋友了，而这一点十分令人难过。</p>
<p>但内心深处我没法不注意到大前提——我们的确是真正的朋友。因为人心不是石头做的，即使是室友那样子那么内向性格的，永远怕给人带来麻烦所以那样内敛的人，也会被生活所打动，那些深夜里从技术发散而来对技术本身、人和世界的讨论，那些有趣的逻辑陷阱和谜题：“不到长城非好汉”的逆否命题是什么；我们假设自己是机器尝试以机械的逻辑出发最终会得到什么有趣的东西，这经常会让决定早睡的我俩熬夜到三四点，然而第二天依然不吸取教训；或者是简单的问候，或者是散步。种种这些至少已经实现了我自己对于朋友的定义，虽然你永远也没有办法知道任何另一个人在想什么，但是根据以往经验，对方只有在有相同想法的时候才会有我上述的种种行为。</p>
<p><strong>我想，也许我会得到一封信，或者是一个可以预见的永别。</strong></p>
<p>没什么不确定的，我会等待这封信直到永远。</p>
<hr>
<p>这时候我开始确信起来Bryan作为一个独立的人已经彻底消失了，我的脑海中寻不见他的踪迹。</p>
<p>有关Bryan的事情也模糊起来，他身上似乎总是带着一些忧伤，与我的不同，他的忧伤更加纯粹，并且没什么具体的理由，也许他享受这份月亮一样的忧郁，享受那种如同文火慢炖胸腔的孤独感，又也许这是他的某种仪式，通过忧郁来荡涤自己的灵魂。</p>
<p>Bryan最后的故事是在前几天，楼下的电磁门打不开了。当时他提着一袋垃圾准备出门扔掉，再去面包店给自己买一袋粗粮面包作为晚餐——我在家呆了一下午了。Bryan反复按下门开关，没用，用身子撞门，也没用，甚至声音都不大，只是一声闷响。</p>
<p>道理很简单，比如我们在物资充裕的情况下在家里待上十天半个月不出门都没问题，但是一旦当我们知道家里门被从外面反锁之后，自由的滋味就会瞬间变得无比诱人，此时在家一个小时都待不下去，就是跳楼，也要出门，这是没有商量的。Bryan也是如此，他脑子里闪过回家随便吃点的念头，但是仅仅是因为门坏了，他就一定要出去，<strong>出门成为了唯一的理由，动机和目的</strong>，至于晚饭，则不那么重要了。</p>
<p>于是Bryan听到外面的乌鸦叫，好像自己也成为了其中的一员，他来到一楼和二楼之间的楼道，打开通向自由的窗子，窗子很小，只够他蜷缩着出去，但Bryan感到自己如同飞起来一样开心；来到了二楼的平台上，抓着防盗网，Bryan想象自己是一个熟练的探险家，伸出脚寻找一个落脚点；最后一步是踩到单元楼的信箱上，然后跳下来，呼吸着如同空气一样真实的自由。我拿出钥匙，试探性地从外面开了一下门，门开了，拿上垃圾，踏上了寻找晚饭的征程。</p>
<p>那晚我见到了如此壮丽的晚霞。</p>
<p><img src="https://blog.thrimbda.com/uploads/2019/06/10/nightfall.jpg" alt="nightfall.jpg"></p>
<hr>
<p>我最终收到了室友的那封邮件，他的歉意和感谢，整篇都是我们友谊的证明，做了211天室友我被认为是一个温暖的人，是一个合格的朋友。而经过一年左右的反思和修养，和最近的种种迹象表明，Bryan作为我用来逃避自己不良情绪的替身已经消失了，多年前那个令Bryan诞生并长久以来一直折磨着作为Bryan的我的事情，最终让我成为了一个更加真实和坦然的人。</p>
<p>弗兰克·劳埃德·赖特的话可以作为整个Bryan事件的盖棺定论：</p>
<blockquote>
<p>下意识的虚伪已经足够可怕，而对于任何富有创造力的艺术家而言，清醒的虚伪会更无情地侵蚀他的灵魂。没有任何懦夫能创造出作品，我曾经这样认为，今天依然坚信。</p>
</blockquote>
<p>最后做个总结，之前的文字提到过我看不清自己的道却在雕虫小技上多有徒劳，现在发现无论自己有什么样的目标，如何努力都是为了成为一个更好的人，一个情绪稳定、清醒、自知、专注、<strong>丰腴</strong>的人。毕业时候的总结也依然准确：</p>
<blockquote>
<p> 接下来的生活我预感仍然充满了犯良性错误的机会以及不犯任何错误的时刻，过程并不轻松愉快，但绝对引人入胜。</p>
</blockquote>
<p>而生活也的确就像是滑雪，转左，转右，或思考它并死去。我们不仅拥有生活，更被生活所拥有。</p>
]]></content>
      
        <categories>
            
            <category> 随笔 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 感悟 </tag>
            
            <tag> 非正常人类研究 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[嫉妒时间的人]]></title>
      <url>https://blog.thrimbda.com/2019/04/18/%E5%AB%89%E5%A6%92%E6%97%B6%E9%97%B4%E7%9A%84%E4%BA%BA/</url>
      <content type="html"><![CDATA[<p>“喝吧！等离子蛋蛋，这是你们一族的命运！”刚刚洗完澡给地上的赤皿添满水的Bryan提着劲吐出雄浑的音色说到。</p>
<p>等离子蛋蛋和Bryan语言不通，事实上，在他们两个中只有一个人会说话。虽然讲得有些离谱，但Bryan说的至少是实话——谁不需要喝水呢？</p>
<a id="more"></a>
<h2 id="时间并非是平坦的直线"><a href="#时间并非是平坦的直线" class="headerlink" title="时间并非是平坦的直线"></a>时间并非是平坦的直线</h2><blockquote>
<p>时间后来被证实并非像人们想的那样，是一维的。或者说仅仅用“一维”不足以表达时间错综复杂的网状结构。</p>
</blockquote>
<p>如果把这个秘密公之于众，那么大家一定会认为Bryan疯了。</p>
<p>但真相的滋味一旦尝到，就一发不可收拾，即使当作秘密藏在心里永远也不给另一个人类敞开，忍受极大的孤独，Bryan也要顺从自己的好奇心，继续寻找证据。毕竟这真相诞生在他的脑子里，诞生在他的回忆里，确切地说是诞生自他心底另一个不能说的秘密，那是一场可怕的<a href="https://blog.thrimbda.com/2018/08/13/Sleeping%20to%20dream/">思维实验</a>，足足让Bryan担惊受怕了六个月又40天的时间。</p>
<h3 id="人的心"><a href="#人的心" class="headerlink" title="人的心"></a>人的心</h3><p>可是有关于时间的现象也同时与人心有关，众所周知，人们将自己作为牢房（或者是处于有意的，或者是处于无意的），让自己的心永远不见天日，观察别人的心更是绝不可能。我们只能借助语言将自己的心从丰富多彩结构复杂的状态投射在一根直线上，塞给另一个人，然后祈祷他/她的天才可以将我们被笔直地扭曲了的心复原。</p>
<p>不过也会有这样的时候：我们的心会不经意地闪烁到别人地心里，或者反过来，这时候表情会出现在人的脸上，大多数情况是笑，有时候是幸福的酸楚。因为心关在自己所设计/构成的牢房里，最残忍的心理是好奇和羞涩，Bryan深知好奇另一个人的心所带来的痛苦，无论是晴是雨，一个人只能凭借着微不足道的证据去猜测。而羞涩则加深了好奇所带来的痛苦。</p>
<h3 id="人的心编码为语言"><a href="#人的心编码为语言" class="headerlink" title="人的心编码为语言"></a>人的心编码为语言</h3><p>好在大多数时候事情与痛苦无关。</p>
<p>Bryan有时会尝试向人讲解他对于时间的理解，比如说人心对于语言的所承载的另一个人心的构造过程，实际上也并非像一般人所想象的那样是只存在于时间线上的一个孤立的点。有时候一个人个一句话要跨越数年的时间突然起作用，如同终于获得了解开谜题的钥匙一般。于是语言加上时间的作用，在这个世界自由穿梭，人由于没有办法预知未来，对于这种作用是很难感觉到的，即使感觉到了，也绝对无法向另一个人描述——方程已经被引入了太多未知数。</p>
<p>对于长期讲一种语言的人来说，他们有时会用同一种并不一定正确的模式来构造和解读语言中隐藏的人心。如果这时候突然讲起另一种语言，由于对语言本身的不熟悉，会让人不由自主地小心对待，从而让语言更加直通心灵。Bryan有一个一起烤过篝火的外国朋友，他们之间的交流时常能让Bryan意识到这一点，但相较于语言本身的作用，人的心的相似性才是友谊的坚固基石。</p>
<h3 id="时间在人心上的投影"><a href="#时间在人心上的投影" class="headerlink" title="时间在人心上的投影"></a>时间在人心上的投影</h3><p>正是由于这种对于未来的不可知，对于过去的掌握和记忆以及存在于时间之网的不同位置成为了人与人之间巨大的差异与同质。<strong>因此Bryan会嫉妒时间，或者说嫉妒时间在一个人身上的印记。</strong>这种嫉妒实际上是由两种截然不同的情感构成的：</p>
<p>一是前面说的好奇，好奇在不同的时间里这个人究竟解开了多少语言的谜语，好奇时间带给另一个心以怎样的恩惠与苛责，从而变得丰腴（Exuberance），好奇自己是否能以相同的时间作为度量，体验另一个心的苦难与欢愉，是否，也能变得丰腴？</p>
<p>从而就引出了另一种情感：那就是深深地自卑，大而化之缺少时间的作用，就是缺少无数把钥匙，无法打开从前的人留下的语言中的秘密，也无法有力的形成新的词语构成新的语言将自己的心以新的形式编码；小而化之由于时间的不同步，通过非语言的方式去影响另一个心的概率也大大降低了，——Bryan问自己是不是幼稚的可笑，我事到如今也能理解一二他这种感情了。</p>
<p>终究Bryan决定不做一个懦弱的人，他开始学着分辨在时间中变化的事物和不变的事物，并且相信时间也终究会让他自己变得丰腴。</p>
<h3 id="时间对于人心的作用"><a href="#时间对于人心的作用" class="headerlink" title="时间对于人心的作用"></a>时间对于人心的作用</h3><p>在铁面无私的时间面前，相对作用开始显现它的威力：”隐藏的忧郁有着她至尊的神龛“，这几乎是Bryan反复咀嚼最久的诗句了，并且随着时间的流逝，会有越来越多的钥匙可以解开它部分的谜题，从而可以品尝到不同的气息。</p>
<p>Bryan发现在快乐中持久地品尝忧郁的滋味是一种一致性的体现，因为只有在同一个参考系下，才会因为对前者的留恋而诞生后者，在Bryan最近看过的一本书里，这种一致性的时间跨度竟然可以达到五十三年之久。</p>
<p>不过一致性终究是一种可贵的品质，更多时候则是随着时间的流转，人的心会变得不一样，简化到我们所说的这种二元相对作用上，就体现为快乐会随着快乐的增加而变得平淡，而忧郁会随着时间的流逝而减少。最可悲的情况则是曾经的快乐变成了痛苦，而曾经的忧郁统统失去了意义，Bryan将这种变化称之为背叛。</p>
<p>他决不会允许这种对自己的背叛再次发生，但只要节奏恰当，平衡自然会显现，就如同一个人第一次看到杨树的眼睛一样，那些大大小小的眼睛！没有丰腴的心就很难看得见。</p>
<h3 id="时间终止于等离子蛋蛋的呼噜声中"><a href="#时间终止于等离子蛋蛋的呼噜声中" class="headerlink" title="时间终止于等离子蛋蛋的呼噜声中"></a>时间终止于等离子蛋蛋的呼噜声中</h3><p>那么究竟什么是在时间中变化的事物呢，什么是在时间中不变的事物呢？假如曾经相濡以沫的友谊在如今看来已经不值一提，是否可以说存在于那段时间之上的人心已经走向了死亡？</p>
<p>或者每一个人每一天都是新生，承载着昨天的心的记忆，<del>将这项发现作为拖延症堂而皇之的理由</del>。</p>
<p>等离子蛋蛋最终还是接受了她的命运，开始安详的打起呼噜，Bryan这才发现时间已经停下来了。</p>
<hr>
<p><strong>一个嫉妒时间的人如此敏感，时间也需要他成熟且勇敢。</strong></p>
]]></content>
      
        <categories>
            
            <category> 随笔 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 非正常人类研究 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Sleeping to Dream]]></title>
      <url>https://blog.thrimbda.com/2018/08/13/Sleeping%20to%20dream/</url>
      <content type="html"><![CDATA[<p>Bryan没有想到，悲哀竟也具有延时性——过去的鬼魂又找上来，而这一次，他再也没有力气抵抗。</p>
<a id="more"></a>
<p>如果要现在的他形容一下<strong>悲哀</strong>的形状，他会说像流体，在胸口中盛着，走路时候会晃着，撒出一点来腐蚀他的心。躺下的时候开始平稳地流淌，唯有随着心跳一起颤动。</p>
<p>至于温度，绝对算不上冰凉，是温热的，比胸腔的温度稍高一点，不断缓缓释放热量烘烤着心脏，这感觉就像…文火慢炖，和着痛苦熬煮，却总也煮不熟，活跃的神经持续提醒着他<strong>痛苦</strong>的滋味。</p>
<p>这个世界上只有一种超距作用——那就是在他后脑勺操控着这锅深渊之汤的<strong>回忆</strong>们，在与雨打浮萍般的命运一同酿制发酵了一年有余的前一段时间，在他打开这件装满废弃回忆的地窖门的时候，酿好的鬼混带着温暖甜蜜的愉悦与怨恨气味，一下子涌上来让他犹如被一击重锤击中——这表现在我看来实属羞愧，或者说明白一点，羞愧到无地自容，我从来没见到他这样过。真诚自信却又年轻坦荡，现在却迷失在时间的之中，他分不清哪些事情发生在现在，哪些事情发生在两年前，哪些事情他以为发生在昨天却其实已经过去了一年。这些他在过去的一年里以为自己已经早已丢失的<strong>回忆</strong>，最终以一种如此清晰可见的形式弥散在所有有序的其他回忆之中，如同癌症一般感染。更早些的干净回忆如今也开始有了严厉的棱角，游荡在他的脑子里。</p>
<p>可惜可怜的Bryan只是一位可悲的一维时间生物，不知道自己的脑子在某些时刻中只充当着传音媒介的作用，将久远的信息传递给无数次迭代后的自己，同时做着带着淡淡悲哀的自信蠢事。这一刻他终于意识到了，夹在神与野兽中的人性的<strong>悲凉</strong>，然而仍然不受控制，要为这螺旋悲剧做祭品。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">Ode on Melancholy</span><br><span class="line"></span><br><span class="line">BY JOHN KEATS</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">No, no, go not to Lethe, neither twist </span><br><span class="line">       Wolf&apos;s-bane, tight-rooted, for its poisonous wine; </span><br><span class="line">Nor suffer thy pale forehead to be kiss&apos;d </span><br><span class="line">       By nightshade, ruby grape of Proserpine; </span><br><span class="line">               Make not your rosary of yew-berries, </span><br><span class="line">       Nor let the beetle, nor the death-moth be </span><br><span class="line">               Your mournful Psyche, nor the downy owl </span><br><span class="line">A partner in your sorrow&apos;s mysteries; </span><br><span class="line">       For shade to shade will come too drowsily, </span><br><span class="line">               And drown the wakeful anguish of the soul. </span><br><span class="line"></span><br><span class="line">But when the melancholy fit shall fall </span><br><span class="line">       Sudden from heaven like a weeping cloud, </span><br><span class="line">That fosters the droop-headed flowers all, </span><br><span class="line">       And hides the green hill in an April shroud; </span><br><span class="line">Then glut thy sorrow on a morning rose, </span><br><span class="line">       Or on the rainbow of the salt sand-wave, </span><br><span class="line">               Or on the wealth of globed peonies; </span><br><span class="line">Or if thy mistress some rich anger shows, </span><br><span class="line">       Emprison her soft hand, and let her rave, </span><br><span class="line">               And feed deep, deep upon her peerless eyes. </span><br><span class="line"></span><br><span class="line">She dwells with Beauty—Beauty that must die; </span><br><span class="line">       And Joy, whose hand is ever at his lips </span><br><span class="line">Bidding adieu; and aching Pleasure nigh, </span><br><span class="line">       Turning to poison while the bee-mouth sips: </span><br><span class="line">Ay, in the very temple of Delight </span><br><span class="line">       Veil&apos;d Melancholy has her sovran shrine, </span><br><span class="line">               Though seen of none save him whose strenuous tongue </span><br><span class="line">       Can burst Joy&apos;s grape against his palate fine; </span><br><span class="line">His soul shalt taste the sadness of her might, </span><br><span class="line">               And be among her cloudy trophies hung.</span><br></pre></td></tr></table></figure>
<p>此刻他满腹凄惶，可怜的Bryan。</p>
]]></content>
      
        <categories>
            
            <category> 随笔 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 非正常人类研究 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[为世界之光]]></title>
      <url>https://blog.thrimbda.com/2018/06/21/%E4%B8%BA%E4%B8%96%E7%95%8C%E4%B9%8B%E5%85%89/</url>
      <content type="html"><![CDATA[<p>还差几顿散伙宴席，几件待取的物品，几天后我就真正毕业了，离开甜睡梦乡，再度踏上现实的土壤。</p>
<p>适才和大班长聊天，我们心里都清楚这大概是毕业前最后一次聊，聊的无非是前程，最后止于一个暗号似的短语，我发出去，他又发回来：<strong>为世界之光</strong>。</p>
<p>它出自西安交通大学校歌。</p>
<blockquote>
<p>美哉吾校，真理之花，青年之模楷，邦国之荣华，</p>
<p>校旗飘扬，与日俱长，为世界之光，为世界之光。</p>
<p>美哉吾校，鼓舞群伦，启发我睿智，激励我热忱，</p>
<p>英俊济跄，经营四方，为世界之光，为世界之光。</p>
<p>美哉吾校，性灵泉源，科学之奥府，艺术之林园，</p>
<p>实业扩张，进步无疆，为世界之光，为世界之光。</p>
<p>美哉吾校，灿烂文明，实学培国本，民族得中兴，</p>
<p>宇土茫茫，山高水长，为世界之光，为世界之光。</p>
</blockquote>
<p>毕业在即，很多事情很多人都来不及处理和告别，自己就要随着时代的洪流匆匆离去，或是被拍打在更广大的命运的岸堤上，或是乘风破浪，砥砺前行，成为时代的领航者。且不说有句说烂了的漂亮话：”我们的征途是星辰大海“；雄心壮志总是有的，尤其是这个时候——分别的时候——结束的时候——新开始的时节。这种心情，我想惟有我这又爱又恨并且即将要离开的母校的校歌中的这句“为世界之光”能表达。</p>
<a id="more"></a>
<h2 id="交通大学"><a href="#交通大学" class="headerlink" title="交通大学"></a>交通大学</h2><blockquote>
<p>天地交而万物通，上下交则其志同。</p>
</blockquote>
<p><del>我终于毕业了，可以大方地说母校这词了。</del></p>
<h3 id="考败来交？"><a href="#考败来交？" class="headerlink" title="考败来交？"></a>考败来交？</h3><p>不知道从哪个师兄或者师姐那里听来的：“西安交大的人都有一股戾气，甚至可以说‘考败来交’”，这印象对于四年前初入大学校园的我来说是非常深刻的：还未开学，就从新同学的qq空间中窥见考北大失利的抑郁，原话是“<strong>向死而生</strong>”；在学生会社团中感受到的这种情绪尤为明显——大家都不开心，认为自己来到了这里是受到了亏待；未来的“室友”也在一次夜谈中向我倾诉自己犹如丧家之犬，打乱了计划、摔碎了梦想、有辱师门啊！</p>
<p>缩小到本专业：空气中更是弥散着一股绝望的味道。由于录取分数低，本专业成了调剂人才的好去处，再加上所有新生来学校报到时候都有机会无代价转专业进来，以吸引学生。<strong>看起来十分廉价，是一个鬼都嫌弃的专业，来者何以不嫌弃自己。</strong>军训时候隔壁电子与信息工程学院来领导问候，在田径场上的三千五百位新生起立者八百人众，将田径场一角围得水泄不通，场面一度非常壮观。而软件学院仅有软件工程专业一个系，领导前来，只有淅淅沥沥八十余人，凄惨寂寥。不过我那时天真烂漫没想到这些，倒是趁机观察了一下之前从来没见过的女生们。</p>
<p>以上心态是交大和交大软件工程专业的同学的一大共通之处，我可能是个例外，因为我和同学们都是凭实力考上的大学，凭什么你们能凭实力考败，我不能凭实力超常发挥喜大普奔来到大学校园而绝无忝列门墙的感受？但同学们的失落，我终究是感受得到的，显然也受了影响。所幸这种心态在大多数人那里只持续了最多一年。待我们熟悉了新的根据地，建立新的友谊，甚至舔舐伤口以至于赢回了新的梦想后，往昔的失落和遗憾都变得不足为道，也才开始模糊的意识到我们所拥有的<strong>新的使命和视野</strong>，还真就如同校歌中所唱的一样，该“为世界之光”。</p>
<h3 id="工程师的摇篮"><a href="#工程师的摇篮" class="headerlink" title="工程师的摇篮"></a>工程师的摇篮</h3><p>大一时期教计算机基础的老师笑道我们学校是“工程师的摇篮”，意思只培养的出工程师，却培养不出领袖，成为社会的中流砥柱，却多是埋没在洪流之中为上层建筑做坚实基础。他点评了一下校训“<strong>精勤求学，敦笃励志，果毅力行，忠恕任事</strong>”；我看来他是有苦说不太出来，可歌又可气，不能说不赞同，却又兴叹没有教学生立鸿鹄之志。</p>
<p>倒是很符合我自己的特点，<strong>不适合做leader，又不甘于做一个follower，不过称得上是一个observer</strong>，人不傻但校训中的四点每样都是我缺少的，需要学习一个的。至于其他的，道术体用之类的则需要在生活的细节中去品味，不耽误往前走，另外我还有个很奇怪的能力——能够在不经意之间说自己最想说的、做自己真正想做的，有时候这种误打误撞会让人磕碰的很惨，不过在剪去枯枝败叶后，人真的会更精神一些。</p>
<p>于是我就在前文中所描述的戾气的影响下，在自己无心的真诚选择中，步子凌乱地徐徐前行。生活中的种种事件串在一起教人事后想起来那些巧合和千钧一发只会觉得不可思议，要是再上第二次大学肯定是全然不同了。这些事件包括在竞选部长前一天晚上四点钟突然决定弃了学生会，觉得还是在自己喜欢的微软学生俱乐部大家庭里奉献，一待就是四年；之后从梧桐苑吃饭午饭看到心心念的机器人队摆摊便欣然走上去报名，一整年的“除上课时间和周五下午以及过年有十天假期以外其他时间一律来队里签到”之后对于技术的整体感受力和自信提升；抱着试一试的心态报名了大二暑假的微软学生夏令营认识了一位可敬的朋友，这位朋友顺带还在毕业前夕举手之劳帮我安排上了现今的去处；报名去了实验室实习，对于本校的研究生生活进行了绝无仅有的提前感受并下定决心决不考研；在实验室实习期间接了一个让我事后气馁到如此的外包项目，请注意以下言语中的时间均是过去完成式：</p>
<blockquote>
<p>去年九月因为手头紧，跑去接了个做网站的私活，约定的10月底上线，但是不曾想这竟成了我一个学期也未能完成的、名副其实的<code>焦油坑</code>，于是就有了这<strong>人月鬼话</strong>，作为我不虚心学习前人的谆谆教诲与宝贵经验、自以为是，最终狼狈不堪，写出了丑陋的代码后才回过头来明得事理的一个教训。也希望作为对个人学习生活的一个总结，尝试着提炼出一些感悟，最终让自己的境界提高一点点。</p>
</blockquote>
<p>以及最后的、我早有计划却又始料未及的半年匆忙从零学起，却又在紧要关头急转弯的出国继续念书<a href="http://blog.thrimbda.com/2017/12/10/%E8%A1%8C%E7%99%BE%E9%87%8C%E8%80%85%E5%8D%8A%E4%B9%9D%E5%8D%81/">事宜</a>。我最终坐在床上津津有味地写这篇随笔。</p>
<p><strong>头一年的跃跃欲试、第二年的艰苦积累、第三年的幸福与无助、第四年的迷惘与淡然，是我在这摇篮中的血与火。</strong></p>
<p>因此我没因为被培养成一个工程师而感到气馁，西方的谷歌不也提倡“去问问工程师”吗？前年母校百廿校庆时我自问“我能为世界之光吗？”，一位诤友言：“码农耳。”</p>
<p>我只希望能做那种不会被轻易替代掉的码农，<strong>从思维的田野中孕育出不朽的逻辑果实</strong>。</p>
<h3 id="饮水思源"><a href="#饮水思源" class="headerlink" title="饮水思源"></a>饮水思源</h3><p>校园中曾经发生过一件轶事：两男子在课堂中的教室打架，引得班级中一红衣男孩拍案而起：“这里是西安交通大学，世界顶尖学府，而你们却在这里张牙舞爪，你觉得合适吗？！”在当时轰动整个校园，一股思潮随之而起…</p>
<p>我又想到校庆日子里在朋友圈刷屏的一篇文章《交通大学&ne;上海交通大学》。全国同根生的好像有五所交大，分别是上海交通大学、西安交通大学、西南交通大学、北京（方）交通大学、新竹交通大学。其中上海交通大学和西安交通大学关系最密，来源于1896年北洋政府创办的南洋公学，南洋公学后来几经改名改为交通大学，再到国立交通大学，最后在建校的六十周年大树西迁，主体部分来到了广袤的大西北支援发展建设，生长为西安交通大学；而留在上海的部分又经三年独立办学成为了现在的上海交通大学。由于种种因素，上海交通大学十分争光，是同源五兄弟中的翘楚，于是“交通大学”这响亮的名字在海内外学者百姓心中与上海交通大学默默的划上了等号。西交学子于是被那“考败来交”的心态又激发了自尊心，开始为心爱的母校鸣不平，甚至江学长后来只光顾上交而不来西交也引人发恨。这种情绪我也有，前几天他校的师兄见了我和江学长大头照的合影惊说“江学长也是交大的？”，还以为自己口误，纠正道：“西交，不是交大”，我隔着屏幕吐了吐舌头。</p>
<p>有趣的是五所交大中都有一尊几乎一模一样的“饮水思源”碑，最上面是立体的校徽，碑上刻有“饮水思源”四字。真正来到了现实的修罗场，只要听说是交大的同学师兄，我们都倍感亲切。更有甚者要真正贯彻落实上的是交通大学而不分西交上交，于是纷纷去了上交读研。<strong>玩笑之后，英雄不问出处，大家各凭本事办事，爱校则是另一番情感，我们记住饮水思源即可。</strong></p>
<h2 id="美梦现实"><a href="#美梦现实" class="headerlink" title="美梦现实"></a>美梦现实</h2><blockquote>
<p>起这个标题好像我沉溺于空想而罔顾现实，实则是也不是。</p>
</blockquote>
<p>如本文开头所说“<strong>离开甜睡梦乡，再度踏上<a href="http://blog.thrimbda.com/2018/03/08/&#39;Tis-not-through-envy-of-thy-happy-lot/">现实</a>的土壤</strong>。”自今年一月半赴京实习起我就悟出了学校生活的宝贵。我曾经一度心中呐喊“我干嘛不在毕业前回学校当咸鱼啊！”<strong>实际上实习生活十分新奇有趣令人充满干劲并且有机会可以猛然发现竟已夜半十一点</strong>。我想说的是校园生活如同一场美梦，每次回校，都是续上了这酣甜的梦乡。</p>
<p>我于是要在三月初打游戏到凌晨四点，四月初酣睡至中午后点一盒烧鸭饭然后在学院混迹一下午，去康桥吃晚饭，在温泉浴室洗澡后去小黑店买柠檬红茶，五月初除此之外还要在晚上去东南门买卷馍豆腐凉菜和面筋——我们称之为“味觉巅峰 top of the taste”以度过自己在学校里“典型的一天”。在校园里某个楼梯上挥洒汗水都觉得无比幸福，好比世外斧柯烂后回到家中发现一切如旧。</p>
<p>不过六月回校答辩的高列列车上我竟然心如止水。仿佛美美的睡了一个长觉后阳光照射在被褥上，睡眠浓郁还未散尽，身心得到了休息，从睡海底下浮上水面，睁开眼睛，安详而满足。而美梦虽美，终究是深睡眠的梦，在梦中只有眼睛和耳朵，去学去听，现在醒来，才有力气去施展。乾，元亨利贞，一爻变二爻三爻，潜龙出水，是时候寻见大人而后终日乾乾，朝夕警惕了。</p>
<p>大学的前两年的新鲜还没尝够，后两年就像乘上了火箭一般过得飞快，这其中有不少故事我都告诉了日记本，更多的故事我因为犯懒没告诉它。但原始未受扰动的环境让我有许许多多的机会犯一些不会使自己出局 (<strong>knock out of game</strong>) 的良性错误，并学习不犯错误的知识，鉴别有些一旦犯了就会出局，绝无弥补机会的恶性错误。犯错误的过程以及恶果的滋味最不好受，我得以加深印象，舔舐伤口，从中学习。在话剧哥本哈根中海森堡说了一句话：“向左、向右、或思考它并死去。”我深以为然并发了朋友圈以警示自己，但细细回想品味之后发现这句话适用的上下文是滑雪，在这种紧张刺激的运动中人只能凭着从前摔出来的肌肉记忆转左转右，若是这个时候再去思考，就会错过时机，一命呜呼，被命运判出局；要点在于需要在缓和的环境下<strong>不断思考、不断摔跤、不断形成新的肌肉记忆</strong>然后才能在真正险恶的环境中敏捷机智地转左、转右，并在这个过程中享受极限运动带来的刺激与快乐。</p>
<p>接下来的生活我预感仍然充满了犯良性错误的机会以及不犯任何错误的时刻，过程并不轻松愉快，但绝对引人入胜。</p>
<blockquote>
<p>抖了抖擞精神竟然写到天都快亮了。</p>
<p>这里不可多写因为还未盖棺不能定论，</p>
<p>但我还是要说一句——</p>
<p>为世界之光！</p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> 随笔 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 感悟 </tag>
            
            <tag> 交通大学 </tag>
            
            <tag> 毕业 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA['Tis not through envy of thy happy lot]]></title>
      <url>https://blog.thrimbda.com/2018/03/08/'Tis-not-through-envy-of-thy-happy-lot/</url>
      <content type="html"><![CDATA[<blockquote>
<p>‘Tis not through envy of thy happy lot,<br><strong>but being too happy in thine happiness.</strong></p>
</blockquote>
<p>我终于过上了梦寐以求的独居生活，开始了一段<del>温室中的</del>北漂生活。</p>
<a id="more"></a>
<h2 id="北漂序曲"><a href="#北漂序曲" class="headerlink" title="北漂序曲"></a>北漂序曲</h2><p>人们大概都是在不经意间改变了自己的轨迹，而且要到事后很久才会发现。我们能够体验的就是当下，所以暂且不提Gap这个决定到底改变了什么，但那天晚上真的很自在，不是因为酒和肉，而是和Vicious Master的脑残英语对话。有点像冷风中的夜晚坐在篝火旁煮汤——虽然也许第二天就会被冻死，但烤着火的时候你看到的是银河绚烂而不是冰冻荒原。</p>
<p>我一直认为最高明的杀人方法就是站在当事者的角度去质问他为什么没有把握住之前应该把握的一个好机会。这个方法的要点在于这个机会已经无可挽回，并且这个逝去的机会约弥足珍贵效果越好。在当事者崩溃后你可以大言不惭的说我是为他好的。</p>
<p>但我最终没有崩溃，并且一如既往地，把它当作了旅程中的台阶。</p>
<p>紧接着就跑去实习了。头两天，我对将要负责的工作完全一头雾水，感觉自己是个骗子，什么都不会就跑来搞破坏，在新环境中不停的思考为什么我要折磨自己，当个咸鱼不好吗？<strong>但这些压力是有益的，有非常浓厚的生活气息。</strong>于是很快我就融入了新的环境。</p>
<h3 id="警惕和学习"><a href="#警惕和学习" class="headerlink" title="警惕和学习"></a>警惕和学习</h3><p>我们常说<strong>生于忧患，死于安乐</strong>，请注意这不是在写高考作文，我意识到自己特别喜欢的另一句话与之有着类似的内涵：</p>
<blockquote>
<p>“生者的地狱是不会出现的；如果真有，那就是这里已经有的，是我们天天生活在其中的，是我们在一起集结而形成的。免遭痛苦的办法有两种，对于许多人，第一种很容易接受：接受地狱，成为它的一部分，直至感觉不到它的存在；第二种有风险，要求持久的<strong>警惕和学习</strong>：在地狱里寻找非地狱的人和物，学会辨别他们，使他们存在下去，赋予他们空间。”</p>
</blockquote>
<p>我太喜欢这种隐喻了以至于有时候说话晦涩难懂，用抽象而简单的符号表达丰富的内涵。这样做的好处在于你可以用自己的生活为符号赋予意义，从中学习到新的知识。<strong>温故而知新</strong>？</p>
<p>我想通过这句话告诉自己的事如果没有清晰的<strong>自我意识</strong> (<strong>Self-awareness</strong>)，，盲目地过日子，时间很快就会过去，届时世界扑面而来，撞上山头才发现一切都太晚了，给予别人用我所说的高明手段杀你的机会。又或者日子平稳地过去，成为“地狱的一部分”。</p>
<p>所以，承认失败的风险存在，了解它的后果，然后清醒地度过每一天，警惕，并持续学习。顺利的话我大概会在每个阶段都会问自己为什么要自我折磨，但实际上日子过得充实，并且毫不后悔。</p>
<p>就如同我的一个非常阳光的朋友在总结自己一年来的生活时候所说的：</p>
<blockquote>
<p>“So sometimes you don’t need to worry about the things that have not happened, just be yourself and hang in there, make sure that when the opportunity comes, you won’t let it go!”</p>
</blockquote>
<hr>
<p>那我们加油。</p>
]]></content>
      
        <categories>
            
            <category> 随笔 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 感悟 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[To-]]></title>
      <url>https://blog.thrimbda.com/2018/01/06/To-/</url>
      <content type="html"><![CDATA[<blockquote>
<p>济慈曾经见过一位年轻的女士几分钟，为其着迷甚至神伤。</p>
</blockquote>
<a id="more"></a>
<h2 id="To"><a href="#To" class="headerlink" title="To -"></a>To -</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">TIME’S sea hath been five years at its slow ebb,	</span><br><span class="line">  Long hours have to and fro let creep the sand,	</span><br><span class="line">Since I was tangled in thy beauty’s web,	</span><br><span class="line">  And snared by the ungloving of thine hand.</span><br><span class="line"></span><br><span class="line">And yet I never look on midnight sky,	</span><br><span class="line">  But I behold thine eyes’ well memoried light;	</span><br><span class="line">I cannot look upon the rose’s dye,	</span><br><span class="line">  But to thy cheek my soul doth take its flight.	</span><br><span class="line"></span><br><span class="line">I cannot look on any budding flower,	</span><br><span class="line">  But my fond ear, in fancy at thy lips	</span><br><span class="line">And harkening for a love-sound, doth devour	</span><br><span class="line">  Its sweets in the wrong sense:—Thou dost eclipse	</span><br><span class="line"></span><br><span class="line">Every delight with sweet remembering,	</span><br><span class="line">And grief unto my darling joys dost bring.</span><br></pre></td></tr></table></figure>
<h3 id="小记"><a href="#小记" class="headerlink" title="小记"></a>小记</h3><p>后来发现，这首<code>To - [&quot;Time&#39;s sea&quot;]</code>中最后两句</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Every delight with sweet remembering,</span><br><span class="line">And grief unto my darling joys dost bring.</span><br></pre></td></tr></table></figure>
<p>和莎士比亚<code>sonnet CXIII</code>中</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Even so, being full of your ne&apos;er cloying sweetness,</span><br><span class="line">To bitter sauces did I frame my feeding.</span><br></pre></td></tr></table></figure>
<p>有些韵律上的相似。难怪曾经看到济慈这首诗的脚注中提到 “在情绪构架的韵律处理上，在逐渐增强的乐感上，都极似莎士比亚十四行诗。”</p>
]]></content>
      
        <categories>
            
            <category> 文学 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> John Keats </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[行百里者半九十]]></title>
      <url>https://blog.thrimbda.com/2017/12/10/%E8%A1%8C%E7%99%BE%E9%87%8C%E8%80%85%E5%8D%8A%E4%B9%9D%E5%8D%81/</url>
      <content type="html"><![CDATA[<p>决定Gap那天我买了人生中第一包烟还有六瓶啤酒，中断一切正在着手做的事情，踏上了回家的公交车，准备与自己一起度过一个晚上。</p>
<p>前途未卜对于那天的我来说是遥远的。</p>
<a id="more"></a>
<h2 id="行百里者"><a href="#行百里者" class="headerlink" title="行百里者"></a>行百里者</h2><p>说白了这是长期的酝酿因为我幡然醒悟因而看起来不可接受。想到这一点只觉吾生之须臾，羡长江之无穷。最终坦然地连同牛肉与啤酒将它咽下了肚子里，留在脑子里的只剩下多年前看到的乾卦六爻中最下面一个：<strong>初九，潜龙勿用</strong>。</p>
<p>回顾我这迷茫地四年，我看不清自己的道，前功尽弃可以说是常事，但却依然以一种近乎残忍的方式为自己老早就迷迷糊糊选好的道路赋予了一个个理由，我奇迹般地没偏航。</p>
<p>如果要做一个总结的话，首先我得讲一个道理。</p>
<hr>
<h3 id="一个三段论"><a href="#一个三段论" class="headerlink" title="一个三段论"></a>一个三段论</h3><p>人们永远不会为自己所缺少并且不自知的东西感到心慌，所幸知识一旦知晓就可以说拥有了。因此在某种程度上我们都对自己当前的智力水平感到满足。</p>
<hr>
<p>但我们大体上还是进步的，对未来生活的美好期望使得一个人要使出浑身解数才能克服现实生活中的一个个难关，有时候甚至愿意自找麻烦，一般我们把这个过程叫做探索。于是我们精神水平在苦难中一步步提高，并且再也不愿意回到过去。</p>
<p>因此无论走不走得到终点，我对于已经走了的这九十里地是感激的。</p>
<p>至于盖棺定论，是不可的。还没有盖棺，我还有好多个一百里地要走，所以就让细节故事留在日记里吧。</p>
<p>这次剩下的十里地，我希望能用乾卦第二爻来概括：<strong>九二，见龙在田，利见大人。</strong></p>
<h2 id="半九十"><a href="#半九十" class="headerlink" title="半九十"></a>半九十</h2><p>总而言之那天晚上我和一直以来鼓励我的Master聊了整晚，最终安然确信自己选择了最适合自己的道路，第二天和回西安开会的爸爸一起度过了一个安静而惬意的下午，我惊喜地发现自己越来越喜欢和父母相处了。</p>
<p>接下来，我希望自己能够接着探索，并且永远也不会失去自己的好奇心。</p>
]]></content>
      
        <categories>
            
            <category> 随笔 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 感悟 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[明明如月，何时可掇？]]></title>
      <url>https://blog.thrimbda.com/2017/08/28/%E6%98%8E%E6%98%8E%E5%A6%82%E6%9C%88%EF%BC%8C%E4%BD%95%E6%97%B6%E5%8F%AF%E6%8E%87/</url>
      <content type="html"><![CDATA[<p>有些东西想写出来。</p>
<p>一粒豆大的汗滴落在地上。我注意到另一粒落在安检机的传送带上。</p>
<p>因为我必须在半小时内从北邮到北京西检票上车：一路狂奔中我只有在排队的时候停下来喘息一口，再次注意到地面。</p>
<p>一年为期啊。</p>
<p>有些问题只要在脑子里从想法具象为语言，就已经有了答案。这篇文章一个月以前就起了头，是因为有着零碎的念想。在吃饭时、等车时、走路时、睡觉时，只要稍有分神，它们就会趁机从世界的各个角落跑来钻进我的脑子里；可当我真的想把它们抓住时，却又背叛我，从我这里溜走，似乎在刻意与我保持距离。</p>
<p>但不管怎么样，一整年过去总是有些想写的。</p>
<a id="more"></a>
<h2 id="老骥伏枥"><a href="#老骥伏枥" class="headerlink" title="老骥伏枥"></a>老骥伏枥</h2><p>这一年的两端——起点与终点都是<strong>MSC Summer Camp</strong>，就从这里说起吧。</p>
<p>比之去年，这次明显地有一种怅然若失地感觉。个中原因除了精神上有包袱，就是内心里将保存这种珍贵的回忆的位置留给了去年，有所保留。这么一想自己都觉得有些矫情——可这是真的。于是也没有怎么参与讨论，除过有一次本组的小胖提出的想法实在太值得攻击导致我张口就怼。</p>
<p><strong>Day2</strong>大家一起去南锣鼓巷逛，这个眼熟的地铁站的栏杆上没有勇哥倚靠着，这条热闹的小巷也对我而言失去了新鲜感，我在其中一家小店更换手串的绳子时血祭了一颗珠——在店主隔断旧线时弹飞到外面的街上再也找不到了，在愤怒之外我隐约感到这其实是天意。</p>
<p>于是翘了<strong>Day3</strong>的City Tour去找小岱，我估计一年的光阴并不能从外表上改变一个人很多，所以我一眼就认出了从智能化大厦方向健步如飞冲出来开门的她。着实令人开心啊！没有带着什么包袱去拜访一位朋友。我暗自下决心要把智能化大厦的图书馆和中关村那些朋克风格的高楼们记在心里。在两天之后在这些执念中加了一条：北邮的黄桃牛柳我今生还要再吃一次。</p>
<h2 id="去日苦多"><a href="#去日苦多" class="headerlink" title="去日苦多"></a>去日苦多</h2><p>短暂的京城之旅已然结束。</p>
<p>回归到我<strong>平衡</strong>但<strong>不稳定</strong>的生活之中，平衡在于我安于其中不去寻求改变。而不稳定在于有潜在的压力令人试图去做一些改变或者是变得颓废。在很久以前的语文课上学到“颓废”这个词语的时候我还不知道它会成为我的大敌。</p>
<p>说白了我就是对自己太好了，不忍心让自己雷厉风行。需要一些刺激来让自己前进，在梦被打破的一瞬间体会到无比的怅然，从而去寻求改变。</p>
<blockquote>
<p>Forlorn! the very word is like a bell<br>   To toll me back from thee to my sole self!</p>
</blockquote>
<p>如同济慈在目送夜莺远去直到它的歌声也消失不见之后那种怅然。只不过我的压力并非来自绝症，比这位命途多舛的诗人更加朝气些有希望一些，可是你说我怎么就越来越颓了呢？</p>
<p><strong>大概这就是我在经历大学中最艰难的一环。</strong></p>
<p>但谁知道呢</p>
<h2 id="何以解忧"><a href="#何以解忧" class="headerlink" title="何以解忧"></a>何以解忧</h2><p>何以解忧呢？曹操的答案我觉得很普通。喝酒永远都是那个Easy choice，借酒浇愁大家都会，第二天醒来除了头痛以至于让自己反思人生以外也没什么好处。这个问题的答案对于每一个人来说可能都不一样，对于我而言好像所有问题的病根都在于静不下心来；焦虑和无忧无虑都不是一个正常人应有的情绪。所以我们都必须从这两个极端中求存。</p>
<p>想到自己最近看到的一部电影：<em>Bright Star</em>直接用了济慈送给芳妮的一首十四行诗作为片名，而整部电影所讲述的也就是济慈客死他乡前三年与芳妮的爱情故事，整部电影安静而富有美感，值得静下心来看。我想说的是济慈这个人本身。在电影的结局后有文字写到：<em>Keats died at twenty five, believing himself a failure. Today he is a recognized as one of the greatest Romantic Poets.(济慈直到25岁英年早逝之前都认为自己是一个失败者，但今天他被认为最伟大的浪漫诗人之一)。</em> 我想说的是，想想济慈的经历，是什么成就了他，是什么造成了他的英年早逝？刨除掉他是一个天才这个可能不是一个原因的原因放在一边。<strong>因为我们都认为时势造英雄，英雄成时势。</strong>人与人的世界是相互影响的。一个人在什么情况下才能写出那样的诗句呢？我想可能只有在那时的英格兰，在那样的窘迫困境下，济慈才有可能成为济慈。那时的人们崇尚艺术——诗歌当然算在其中，那时的生活艰苦不堪。诗人只能通过思维去挣脱现实的枷锁正如<em>夜莺颂</em>中所说的：</p>
<blockquote>
<p>Away! away! for I will fly to thee,</p>
<p>Not charioted by Bacchus and his pards,</p>
<p>But on the viewless wings of Poesy,</p>
</blockquote>
<p>所以何以解忧呢？什么值得追求呢？</p>
<p>这个问题答案没那么简单，但是从我们所见到的所学到的东西中还是能找到一些线索的。</p>
<h2 id="歌以咏志"><a href="#歌以咏志" class="headerlink" title="歌以咏志"></a>歌以咏志</h2><p>在这篇文章的开头提到了我的北京之行，那就从这里继续吧。</p>
<p><strong>Day5</strong>晚上和Cutuy在宾馆里几乎聊了一晚上，很有启发。我之前有提到过这个世界是分层的，我们靠什么向上爬呢？我们靠的是什么爬的更快呢？我听过一句话，并对此很以为然：<em>We can change, because we are educated.</em>教育带给一个人知识，并通过这些知识赋予人以更为广袤的<strong>视野</strong>。通过我们每一个人的视野，我们将看到的东西总结为方法论并用来在这世界上立足。但观察的角度不同，的出的结论也就不会相同。这么想想就很有趣了。</p>
<p>后来我又跑去不要脸地去北邮蹭了小岱一顿饭，然后拼命地跑（骑）去了西站赶车。所以才有了开头那一幕汗滴落地，于是从上火车就开始写，直到今天已经写了十天了。幸甚至哉，歌以咏志。</p>
]]></content>
      
        <categories>
            
            <category> 随笔 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 思考 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Ode on Melancholy 忧郁颂]]></title>
      <url>https://blog.thrimbda.com/2017/06/18/Ode-on-Melancholy-%E5%BF%A7%E9%83%81%E9%A2%82/</url>
      <content type="html"><![CDATA[<p>今天我的济慈诗选到了，其实买它有一部分原因就是因为在<em>Sweet Bitter</em>中看到了<em>《忧郁颂》</em>中的一句<code>隐藏的“忧郁”有她至尊的神龛</code>。另外一部分原因是因为未竟的长诗<em>Hyperion</em>以及济慈本人贯穿了整个<em>《海伯利安》</em>四部曲中。神往已久，于是今天就抄下这首<em>《忧郁颂》</em>。中文采用屠岸译版。</p>
<a id="more"></a>
<h2 id="Ode-on-Melancholy"><a href="#Ode-on-Melancholy" class="headerlink" title="Ode on Melancholy"></a>Ode on Melancholy</h2><h3 id="I"><a href="#I" class="headerlink" title="I"></a>I</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">No, no, go not to Lethe, neither twist</span><br><span class="line"></span><br><span class="line">  Wolf&apos;s-bane, tight-rooted, for its poisonous wine;</span><br><span class="line">     </span><br><span class="line">Nor suffer thy pale forehead to be kissed</span><br><span class="line"></span><br><span class="line">  By nightshade, ruby grape of Proserpine;</span><br><span class="line"></span><br><span class="line">Make not your rosary of yew-berries,</span><br><span class="line"></span><br><span class="line">  Nor let the beetle, nor the death-moth be</span><br><span class="line"></span><br><span class="line">    Your mournful Psyche, nor the downy owl</span><br><span class="line"></span><br><span class="line">A partner in your sorrow&apos;s mysteries;</span><br><span class="line"></span><br><span class="line">  For shade to shade will come to drowsily,</span><br><span class="line"></span><br><span class="line">    And drown the wakeful anguish of the soul.</span><br></pre></td></tr></table></figure>
<h3 id="II"><a href="#II" class="headerlink" title="II"></a>II</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">But when the melancholy fit shall fall</span><br><span class="line"></span><br><span class="line">  Sudden from heaven like a weeping cloud, </span><br><span class="line"></span><br><span class="line">That fosters the droop-headed flowers all,</span><br><span class="line"></span><br><span class="line">  And hides the green hill in an April shroud;</span><br><span class="line"></span><br><span class="line">Then glut thy sorrow on a morning rose,</span><br><span class="line"></span><br><span class="line">  Or on the rainbow of the salt sand-wave,</span><br><span class="line"></span><br><span class="line">    Or on the wealth of globed peonies;</span><br><span class="line"></span><br><span class="line">Or if thy mistress some rich anger shows,</span><br><span class="line"></span><br><span class="line">  Imprison her soft hand, and let her rave,</span><br><span class="line"></span><br><span class="line">    And feed deep, deep upon her peerless eyes.</span><br></pre></td></tr></table></figure>
<h3 id="III"><a href="#III" class="headerlink" title="III"></a>III</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">She dwells with Beauty—Beauty that must die;</span><br><span class="line"></span><br><span class="line">  And joy, whose hand is ever at his lips</span><br><span class="line"></span><br><span class="line">Bidding adieu; and aching Pleasure nigh,</span><br><span class="line"></span><br><span class="line">  Turning to poison while the bee-mouth sips:</span><br><span class="line"></span><br><span class="line">Aye, in the very temple of Delight</span><br><span class="line"></span><br><span class="line">  Veiled Melancholy has her sovran shrine,</span><br><span class="line"></span><br><span class="line">    Though seen of none save him whose strenuous tongue</span><br><span class="line"></span><br><span class="line">  Can burst Joy&apos;s grape against his palate fine;</span><br><span class="line"></span><br><span class="line">His soul shall taste the sadness of her might,</span><br><span class="line"></span><br><span class="line">  And be among her cloudy trophies hung.</span><br></pre></td></tr></table></figure>
<h2 id="忧郁颂"><a href="#忧郁颂" class="headerlink" title="忧郁颂"></a>忧郁颂</h2><h3 id="I-1"><a href="#I-1" class="headerlink" title="I"></a>I</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">不呵！不要到忘川去，也不要拧绞</span><br><span class="line"></span><br><span class="line">  根深的乌头，把它的毒汁当美酒；</span><br><span class="line"></span><br><span class="line">别让你苍白的额头把龙葵野草——</span><br><span class="line"></span><br><span class="line">  普罗赛嫔红葡萄的亲吻承受；</span><br><span class="line"></span><br><span class="line">别用紫杉的坚果做你的念珠，</span><br><span class="line"></span><br><span class="line">  别让甲虫和墓畔的飞蛾变为</span><br><span class="line"></span><br><span class="line">    你忧伤的塞吉，别让批羽的鸱鸮</span><br><span class="line"></span><br><span class="line">分享你心底隐秘的悲哀愁苦；</span><br><span class="line"></span><br><span class="line">  阴影来亲近阴影会困倦嗜睡，</span><br><span class="line"></span><br><span class="line">    会把灵魂中清醒的创痛淹没掉。</span><br></pre></td></tr></table></figure>
<h3 id="II-1"><a href="#II-1" class="headerlink" title="II"></a>II</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">但一旦忧郁的意绪突然来到，</span><br><span class="line"></span><br><span class="line">  有如阴云洒着泪自天而降，</span><br><span class="line"></span><br><span class="line">云雨滋润着垂头的花花草草，</span><br><span class="line"></span><br><span class="line">  四月的雾衣把一脉青山隐藏；</span><br><span class="line"></span><br><span class="line">你就该让哀愁痛饮早晨的玫瑰，</span><br><span class="line"></span><br><span class="line">  或者饱餐海浪上空的虹彩，</span><br><span class="line"></span><br><span class="line">    或者享足姹紫嫣红的牡丹；</span><br><span class="line"></span><br><span class="line">若是你钟情的女郎娇嗔颦眉，</span><br><span class="line"></span><br><span class="line">  就抓住她的酥手，让她说痛快，</span><br><span class="line"></span><br><span class="line">    并深深品尝她举世无双的慧眼。</span><br></pre></td></tr></table></figure>
<h3 id="III-1"><a href="#III-1" class="headerlink" title="III"></a>III</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">她与“美”共处——那必将消亡的“美”；</span><br><span class="line"></span><br><span class="line">  还有“喜悦”，他的手总是贴着嘴唇</span><br><span class="line"></span><br><span class="line">说再见；令人痛苦的近邻“欣慰”，</span><br><span class="line"></span><br><span class="line">  只要蜂蜜啜一口，就变成毒鸠：</span><br><span class="line"></span><br><span class="line">啊，就在“快乐”的庙堂之上，</span><br><span class="line"></span><br><span class="line">  隐藏的“忧郁”有她至尊的神龛，</span><br><span class="line"></span><br><span class="line">    虽然，只有舌头灵、味觉良好、</span><br><span class="line"></span><br><span class="line">  能咬破“快乐”果的人才能够瞧见：</span><br><span class="line"></span><br><span class="line">他灵魂一旦把“忧郁”的威力品尝，</span><br><span class="line"></span><br><span class="line">  便成为她的战利品，悬挂在云霄。</span><br></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> 文学 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> John Keats </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[二探并发(Actor)]]></title>
      <url>https://blog.thrimbda.com/2017/05/18/%E4%BA%8C%E6%8E%A2%E5%B9%B6%E5%8F%91/</url>
      <content type="html"><![CDATA[<p><a href="http://blog.thrimbda.com/2017/05/06/初探并发/">上回</a>谈到利用消息队列在线程（进程）间传递消息以此来实现线程间的通信。</p>
<a id="more"></a>
<h2 id="共享的消息队列"><a href="#共享的消息队列" class="headerlink" title="共享的消息队列"></a>共享的消息队列</h2><p>这是建立在<strong>并发只是提高系统吞吐率的基础上</strong>，在这种假设下每一个worker所做的工作都一样，因此可以共享一个消息队列，谁拿到下一条指令都无所谓。</p>
<h3 id="如果我们不是同胞呢"><a href="#如果我们不是同胞呢" class="headerlink" title="如果我们不是同胞呢"></a>如果我们不是同胞呢</h3><p>假如我们需要实现一个各个worker各司其职异步工作的系统（例如我们的IP-phone）该怎么办呢？假设我们还使用上面的方法，所有的worker共享一个消息队列，这时候就会产生问题：消息没办法发送给特定的worker。</p>
<p>怎么解决这个问题呢？一个简单粗暴的解决方案是给每个消息加上标识，以标识出这条消息所要发送的对象：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">queue = Queue([(<span class="string">'Send_to_worker_A'</span>, <span class="string">'do_something1'</span>),</span><br><span class="line">               (<span class="string">'Send_to_worker_B'</span>, <span class="string">'do_something2'</span>),</span><br><span class="line">               (<span class="string">'Send_to_worker_B'</span>, <span class="string">'do_something3'</span>),</span><br><span class="line">               (<span class="string">'Send_to_worker_C'</span>, <span class="string">'do_something4'</span>),</span><br><span class="line">               (<span class="string">'Send_to_worker_A'</span>, <span class="string">'do_something5'</span>)])</span><br></pre></td></tr></table></figure>
<p>看起来问题迎刃而解了对吧？但我们引入了一个新的问题。</p>
<h3 id="如果我不小心拆开了送给别人的信"><a href="#如果我不小心拆开了送给别人的信" class="headerlink" title="如果我不小心拆开了送给别人的信"></a>如果我不小心拆开了送给别人的信</h3><p>如果送给worker A的消息被worker B接收到了，他得到条消息其实并没有什么用，而本该得到这条消息的worker A却没得到它，从而这条信息就丢失了。既浪费了worker B的时间，由消耗了work A的青春，甚至有可能因为跳步而使得整个系统陷入到什么诡异的Bug中。</p>
<p>这个问题又怎么解决呢？从直觉上看，给每一个worker添加如下策略就能解决问题：得到别人的消息就把这条消息塞回消息队列中。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Worker_B</span>:</span></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> self.queue.empty():</span><br><span class="line">                data = self.queue.get()</span><br><span class="line">                <span class="keyword">if</span> data[<span class="string">'to_whom'</span>] == <span class="string">'worker_B'</span>:</span><br><span class="line">                    do_something_with_data</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    self.queue.put(data)</span><br></pre></td></tr></table></figure>
<p>看似修修补补解决了问题…实际上又引入了一个新的问题。</p>
<h3 id="这看起来是一条死路"><a href="#这看起来是一条死路" class="headerlink" title="这看起来是一条死路"></a>这看起来是一条死路</h3><p>第一，消息队列是一个队列，这意味着FIFO，就算引入了具有优先级的消息队列，本质上这一点也并没有改变。这样一来，本该第一个交给worker A的消息经worker B一倒腾，成为了当前消息队列中最晚递交给worker A的了，可能使得系统陷入诡异的Bug中。</p>
<p>第二，即使我们设法让分发错了的消息重新插回消息队列的队首，如果不引入锁机制，使得错收了消息worker B的<code>收信-检查-放回</code>操作成为一个原子操作的话，那么在work B执行放回操作的时候，可能其他worker已经在继续进行接收消息操作了，仍然有可能造成时序上的大问题，而引入锁机制索然能解决逻辑上的错误问题，但是这样会使得每次轮询中只有一个worker真正能够工作，而其他得到错误消息执行<code>收信-检查-放回</code>操作的worker白白浪费自己的时间片，<strong>效率低下。</strong></p>
<p>所以，看起来针对为了异步工作而引入并发的系统来说，每个worker共享同一个消息队列并不是一个好办法。</p>
<p>根治这个问题的办法就是针对每一组执行同一任务的worker都建立一个专门的消息队列（邮箱），甚至每个worker都设置自己的消息队列，完全放弃了线程间共享内存的能力。后一种方法就是我今天要讲的主角：<strong>Actor模型（参与者模式）</strong>。</p>
<h2 id="Actor模型"><a href="#Actor模型" class="headerlink" title="Actor模型"></a>Actor模型</h2><p>首先我们来看看维基百科对Actor模型的定义与概念：</p>
<h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><p>在计算机科学中，参与者模式（英语：Actor model）是一种并发运算上的模型。“参与者”是一种程序上的抽象概念，被视为并发运算的基本单元：当一个参与者接收到一则消息，它可以做出一些决策、创建更多的参与者、发送更多的消息、决定要如何回答接下来的消息。参与者模式在1973年于Carl Hewitt、Peter Bishop及Richard Steiger的论文中提出。</p>
<p>参与者模型推崇的哲学是“一切皆是参与者”，这与面向对象编程的“一切皆是对象”类似，但是面向对象编程通常是顺序执行的，而参与者模型是并行执行的。参与者是一个运算实体，回应接受到的消息，同时并行的：</p>
<ul>
<li>发送有限数量的消息给其他参与者；</li>
<li>创建有限数量的新参与者；</li>
<li>指定接受到下一个消息时的行为。</li>
</ul>
<p>以上操作不含有顺序执行的假设，因此可以并行进行。发送者与已经发送的消息解耦，是参与者模型的根本优势。这允许进行异步通信，同时满足消息传递的控制结构。消息接收者是通过地址区分的，有时也被称作“邮件地址”。因此参与者只能和它拥有地址的参与者通信。它可以通过接受到的信息获取地址，或者获取它创建的参与者的地址。参与者模型的特征是，参与者内部或之间进行并行计算，参与者可以动态创建，参与者地址包含在消息中，交互只有通过直接的异步消息通信，不限制消息到达的顺序。</p>
<h3 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h3><p>Actor足够简单，为并发而生，并且具有足够好的封装性可以隔离变化（例如：不关心是多线程还是多进程）。</p>
<p>让我们来看看一个典型的Actor的python线程实现：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">from</span> queue <span class="keyword">import</span> Queue</span><br><span class="line"><span class="keyword">from</span> threading <span class="keyword">import</span> Thread, Event</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WorkerExit</span><span class="params">(Exception)</span>:</span></span><br><span class="line">    <span class="comment"># 用来结束任务的异常</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BaseWorker</span><span class="params">(object)</span>:</span></span><br><span class="line">	<span class="comment"># Actor</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self._mailbox = Queue()</span><br><span class="line">        super(BaseWorker, self).__init__()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">send</span><span class="params">(self, msg)</span>:</span></span><br><span class="line">        self._mailbox.put(msg)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">recv</span><span class="params">(self)</span>:</span></span><br><span class="line">        msg = self._mailbox.get()</span><br><span class="line">        <span class="keyword">if</span> msg <span class="keyword">is</span> WorkerExit:</span><br><span class="line">            <span class="keyword">raise</span> WorkerExit()</span><br><span class="line">        <span class="keyword">return</span> msg</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">close</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.send(WorkerExit)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">start</span><span class="params">(self)</span>:</span></span><br><span class="line">        self._terminated = Event()</span><br><span class="line">        t = Thread(target=self._bootstrap)</span><br><span class="line"></span><br><span class="line">        t.daemon = <span class="literal">True</span></span><br><span class="line">        t.start()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_bootstrap</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            self.run()</span><br><span class="line">        <span class="keyword">except</span> WorkerExit:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">        <span class="keyword">finally</span>:</span><br><span class="line">            self._terminated.set()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">join</span><span class="params">(self)</span>:</span></span><br><span class="line">        self._terminated.wait()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">raise</span> NotImplementedError</span><br></pre></td></tr></table></figure>
<p> 简单地解释一下，这个Actor（我起名为BaseWorker，在真实的项目中作为父类使用），维持两个数据结构：<code>Queue</code>作为邮箱以及<code>Event</code>作为阻塞主线程的杀器。</p>
<p>这里作为外部接口的核心操作只有一个<code>send()</code>方法。请注意，<strong>我们不限制能够传递的消息类型</strong>，这意味着无比的灵活性。</p>
<p>在Actor内部我们使用一个线程来运行<code>run()</code>方法结合<code>recv()</code>方法执行所指定的具体工作。值得一提的是，我们设置了一个哨兵信号<code>WorkerExit</code>用来停止任务，请注意<code>WorkerExit</code>的运行原理是当他被识别后作为一个异常被抛出，而在异常处理这里我们甚至做更多事情，当然这里我们只是在捕获到这个异常时停之线程运行。而这一异常处理的实现有赖于用来包装<code>run()</code>方法的<code>_bootstrap()</code>。</p>
<p>在Actor模型的哲学下我们将这个简单的例子拓展从而走得更远。</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>并发编程需要一种较之平常更为抽象的思维方式，也可以作为“高内聚，低耦合”这一思想的良好实践。</p>
<p>而我在这片对我而言的全新领域的探索中Actor的确是一盏指路明灯，算是领着我真正入了门，因此在这里分享。 :)</p>
]]></content>
      
        <categories>
            
            <category> 技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> python </tag>
            
            <tag> 并发 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[一个RBAC-Demo：为了艾尔]]></title>
      <url>https://blog.thrimbda.com/2017/05/10/%E4%B8%80%E4%B8%AARBAC-Demo-%E4%B8%BA%E4%BA%86%E8%89%BE%E5%B0%94/</url>
      <content type="html"><![CDATA[<p>基于上篇对RBAC的理解，也由于作业要求，我将编写一个简单的Demo对作为RBAC的实践。</p>
<p>我无意将Demo做的无比庞大，我的目标在于说明问题，所以依然”麻雀虽小，五脏俱全。“</p>
<p>那么这个Demo的目标是什么呢，他都可以做些什么呢？</p>
<a id="more"></a>
<h2 id="分析与设计"><a href="#分析与设计" class="headerlink" title="分析与设计"></a>分析与设计</h2><p>为了有趣并充分反映问题，我将在自己的Demo中模拟一个大幅简化的、每个单位都奇迹般地拥有了主观能动性的星际争霸 (StarCraft) 战局中一位星灵玩家所面对的场景。</p>
<p>一个好的Demo需要一个好的名字，因此这个Demo的名字叫做：<strong>为了艾尔！</strong>（艾尔是星灵的母星，每个狂热者在被传送到战场时都会说这样一句慷慨激昂的话：”为艾尔而战！“）</p>
<p>在<strong>为了艾尔</strong>中，你要带领着己方队伍生产出足够的狂热者战士，消灭毁灭者埃蒙，拯救整个宇宙，如果你的狂热者不够，你将会失败，群星低语，万物湮灭。</p>
<p>这一切都体现在一个由python的flask框架所编写的RESTful的服务中。</p>
<blockquote>
<p>其实真实的场景中除玩家外每个主体都可以被创造出来，因此都可以被视为资源，而为了体现RBAC，我给他们添加了如下约束：</p>
<ul>
<li>本Demo所提供的几个主体唯一并且始终存在，就如同他们是独一无二的一样，因此也除去任何主体可以被递归地创造出来的可能（例如：探机可以生产星灵枢纽，而星灵枢纽可以生产探机）</li>
<li>事实上传送门是需要水晶的能量支持才能运作的，但是在这里没有体现出来，我将其解释为我们的传送门受到了位于同步轨道上亚顿之矛这艘星灵的传奇母舰的能量支持，从而只把水晶塔看作提供人口上限的资源。</li>
</ul>
</blockquote>
<p>这个战局中拥有以下对象：</p>
<h3 id="主体-Subject"><a href="#主体-Subject" class="headerlink" title="主体(Subject)"></a>主体(Subject)</h3><ul>
<li>玩家 （你）thrimbda</li>
<li>探机 （基本的工作单位，可以采集生产资源，也可以建造建筑）probe</li>
<li>传送门 （生产狂热者，一种作战单位）gatewat</li>
</ul>
<h4 id="角色-Role"><a href="#角色-Role" class="headerlink" title="角色(Role)"></a>角色(Role)</h4><ul>
<li>执政官（最高统帅，调配一切资源）archon</li>
<li>晶体矿采集者 （只有探机可以承担此任）crystal_collector</li>
<li>供狂热者传送的枢纽 （支持星灵战士折跃的信标）portal</li>
<li>水晶建造者 （有了水晶，我们才可以有足够的人口上限用来传送狂热者）pylon_transporter</li>
</ul>
<h3 id="资源-Resource"><a href="#资源-Resource" class="headerlink" title="资源 (Resource)"></a>资源 (Resource)</h3><ul>
<li>未采集的水晶矿 （用于建造水晶，以及传送狂热者，初始值未知）</li>
<li>采集的水晶矿 （用于建造水晶，以及传送狂热者，初始值0）</li>
<li>产能 （提供传送的能量，也就是我们口中的人口，初始值0）</li>
<li>狂热者 （作战单位，你用来拯救宇宙的战士们，初始值0）</li>
</ul>
<h3 id="权限-Permission"><a href="#权限-Permission" class="headerlink" title="权限 (Permission)"></a>权限 (Permission)</h3><blockquote>
<p>由于针对资源的每一个操作都是一个权限，因此这里我们不单独把操作列出，而直接给出权限及其描述</p>
</blockquote>
<ul>
<li>采集晶矿（每次最多采集1000单位）</li>
<li>观察未采集的晶矿（观察总量）</li>
<li>状态报告 （报告当前你所拥有的资源数量）</li>
<li>侦察埃蒙的实力（计算需要的狂热者数量）</li>
<li>建造水晶塔（每个水晶塔提供10的产能单位，以及100晶矿）</li>
<li>生产狂热者（每个狂热者消耗2的产能单位，以及100晶矿）</li>
<li>攻击埃蒙（不胜利，毋宁死！）</li>
</ul>
<h3 id="SA"><a href="#SA" class="headerlink" title="SA"></a>SA</h3><blockquote>
<p>主体-角色以及角色-权限的多对多关系，使用python的多元祖数据结构表示，在实现中亦是如此，因此本应用中不使用数据库。</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">subject_role = ((<span class="string">'thrimbda'</span>, <span class="string">'archon'</span>),</span><br><span class="line">                (<span class="string">'probe'</span>, <span class="string">'crystal_collector'</span>),</span><br><span class="line">                (<span class="string">'probe'</span>, <span class="string">'pylon_transporter'</span>),</span><br><span class="line">                (<span class="string">'gateway'</span>, <span class="string">'portal'</span>))</span><br></pre></td></tr></table></figure>
<h3 id="PA"><a href="#PA" class="headerlink" title="PA"></a>PA</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">role_permission = ((<span class="string">'archon'</span>, <span class="string">'get_status'</span>),</span><br><span class="line">                   (<span class="string">'archon'</span>, <span class="string">'for_aiur'</span>),</span><br><span class="line">                   (<span class="string">'archon'</span>, <span class="string">'scout'</span>),</span><br><span class="line">                   (<span class="string">'crystal_collector'</span>, <span class="string">'get_crystal'</span>),</span><br><span class="line">                   (<span class="string">'crystal_collector'</span>, <span class="string">'crystal_status'</span>),</span><br><span class="line">                   (<span class="string">'pylon_transporter'</span>, <span class="string">'get_status'</span>),</span><br><span class="line">                   (<span class="string">'pylon_transporter'</span>, <span class="string">'transport_pylon'</span>),</span><br><span class="line">                   (<span class="string">'portal'</span>, <span class="string">'transport_zealot'</span>),</span><br><span class="line">                   (<span class="string">'portal'</span>, <span class="string">'get_status'</span>))</span><br></pre></td></tr></table></figure>
<h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><p><a href="https://github.com/Thrimbda/my-life-for-Aiur" target="_blank" rel="noopener">仓库URL</a></p>
<p><a href="https://my-life-for-aiur.herokuapp.com/" target="_blank" rel="noopener">线上部署</a>（速度慢）</p>
<h3 id="综述"><a href="#综述" class="headerlink" title="综述"></a>综述</h3><p>总的来说我使用了python的flask框架编写了一个RESTful风格的服务，整个应用不涉及前端部分，因此也不存在绕过前端等安全问题了。</p>
<p>首先这个Demo的一个特点在于没有使用数据库，RBAC并没有强制使用数据库，且在RBAC中使用数据库是符合直觉的意见很自然的事情，但在<strong>为了艾尔</strong>中我们不使用数据库，而是使用文件的形式体现RBAC的<code>主体-角色-权限</code>关系。数据库本身就是在文件系统的基础上发展而来的，这里采用文件是因为系统足够简单，为了说明问题而进一步降低系统的复杂度。具体的文件形式见上述 SA, PA 关系说明。</p>
<h3 id="有关RESTful"><a href="#有关RESTful" class="headerlink" title="有关RESTful"></a>有关RESTful</h3><p>这里简单地提以下RESTful(<strong>Re</strong>presentational <strong>S</strong>tate <strong>T</strong>ransfer)</p>
<p>顾名思义，（资源的）表现层状态转化</p>
<p>在一个Web服务中，提供的服务即为系统的资源，以URI的形式体现，而服务的形式为对资源的操作（状态转化），以HTTP动词的形式体现。这其中的几个概念可以很好地跟RBAC中资源、操作对应起来，因此我要做的就是将RBAC中的权限管理应用在REST中对资源的操作上。</p>
<h3 id="RBAC中各个对象"><a href="#RBAC中各个对象" class="headerlink" title="RBAC中各个对象"></a>RBAC中各个对象</h3><p>可以看到在这两个配置文件中，除了SA和PA之外，我们可以隐含地求得S、R、P：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 根据上述元组 subject_role 求得S、R列表</span></span><br><span class="line">subjects = list(set([item[<span class="number">0</span>] <span class="keyword">for</span> item <span class="keyword">in</span> subject_role]))</span><br><span class="line">roles = list(set([item[<span class="number">1</span>] <span class="keyword">for</span> item <span class="keyword">in</span> subject_role]))</span><br></pre></td></tr></table></figure>
<p>而SE可以很好地和web应用中的session对应起来，作为一个主体在一次登陆中的一个临时对象：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 主体用来登陆亚顿之矛战术管理系统的API，这里session作为flask的一个全局对象，其实现细节不再赘述。</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SpearOfAdun</span><span class="params">(Resource)</span>:</span></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">post</span><span class="params">(self)</span>:</span></span><br><span class="line">        args = self.putparser.parse_args()</span><br><span class="line">        <span class="keyword">if</span> args[<span class="string">'subject'</span>] <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            abortInvalideSubject(args[<span class="string">'subject'</span>])</span><br><span class="line">        <span class="keyword">if</span> args[<span class="string">'role'</span>] <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            abortInvalideRole(args[<span class="string">'role'</span>])</span><br><span class="line">        checkRole(args[<span class="string">'subject'</span>], args[<span class="string">'role'</span>], subject_role)</span><br><span class="line">        session[<span class="string">'subject'</span>] = args[<span class="string">'subject'</span>]</span><br><span class="line">        session[<span class="string">'role'</span>] = args[<span class="string">'role'</span>]</span><br><span class="line">        <span class="keyword">return</span> &#123;<span class="string">'message'</span>: <span class="string">'login as %s using %s'</span> % (session[<span class="string">'subject'</span>], session[<span class="string">'role'</span>])&#125;, <span class="number">201</span></span><br></pre></td></tr></table></figure>
<p>由于主体-角色的建模最终是为了将权限隔离开后分配，使得系统中的资源能够被妥善使用与保护。</p>
<p>在<strong>为了艾尔</strong>中，我将权限作为web API的内部属性，例如:</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 用来传送狂热者的API</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Zealot</span><span class="params">(Resource)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">put</span><span class="params">(self)</span>:</span></span><br><span class="line">        permission = <span class="string">'transport_zealot'</span> <span class="comment"># 权限</span></span><br><span class="line">        abortIfSubjectUnauthenticated(session) <span class="comment"># 登陆验证</span></span><br><span class="line">        checkPermission(session[<span class="string">'role'</span>], permission, role_permission) <span class="comment"># 鉴定主体在此角色下是否可以请求此权限</span></span><br><span class="line">        args = self.putparser.parse_args()</span><br><span class="line">        amount = nexus.transport(args[<span class="string">'amount'</span>])</span><br><span class="line">        <span class="keyword">return</span> &#123;<span class="string">'message'</span>: <span class="string">'transport %d zealot warriors, En Taro Tassadar!'</span> % amount&#125;, <span class="number">200</span></span><br></pre></td></tr></table></figure>
<p>而在上述用来举例的两个API中每个类都作为系统中的一个资源而存在，而提供的HTTP方法则是对资源的操作。</p>
<p><strong>至此，RBAC中的几种对象都到齐啦。</strong></p>
<h3 id="业务逻辑"><a href="#业务逻辑" class="headerlink" title="业务逻辑"></a>业务逻辑</h3><p>由于<strong>为了艾尔</strong>是一个真实可玩的在线即时战略类游戏API，因此有必要讲讲它的业务逻辑：</p>
<p>玩家的目标是：<strong>收集资源，建造基地，然后创造一支令你的敌人闻风丧胆的部队打败黑暗者埃蒙。</strong></p>
<p>打败埃蒙的唯一条件就是要拥有足够数量的狂热者（zealot），而这个数量为系统随机生成的一个20到100之间的整数，同时系统会根据这个数据生成刚好够你打败埃蒙的未采集晶矿。</p>
<p><strong>为什么是刚好够？</strong></p>
<p>由于传送狂热者需要足够数量的水晶能量以及晶矿，提供能量的水晶塔也需要消耗晶矿来生产。因此假如你建造了太多的水晶塔，那么虽然水晶能量够了，但你会<strong>因为没有足够的晶矿来传送狂热者而输掉这场决定整个宇宙命运的战役</strong>。</p>
<p>而整套逻辑由一个生命周期跨越整场战役的对象提供，为了防止问题，我加入了线程锁来确保每个操作都是原子的。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 由于它是整个游戏的核心，我将它称之为枢纽-Nexus</span></span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">from</span> threading <span class="keyword">import</span> Lock</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Nexus</span><span class="params">(object)</span>:</span></span><br><span class="line">    _lock = Lock()</span><br><span class="line">    crestalInControl = <span class="literal">None</span></span><br><span class="line">    crestalRemain = <span class="literal">None</span></span><br><span class="line">    populationCap = <span class="literal">None</span></span><br><span class="line">    zealot = <span class="literal">None</span></span><br><span class="line">    status = &#123;&#125;</span><br><span class="line">    _amond = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="comment"># 初始化对象</span></span><br><span class="line">        self._amond = random.randint(<span class="number">20</span>, <span class="number">100</span>)</span><br><span class="line">        self.crestalRemain = self._amond * <span class="number">100</span> + (self._amond // <span class="number">5</span> + <span class="number">1</span>) * <span class="number">100</span></span><br><span class="line">        self.crestalInControl = <span class="number">0</span></span><br><span class="line">        self.populationCap = <span class="number">0</span></span><br><span class="line">        self.zealot = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">collect</span><span class="params">(self, amount=<span class="number">1000</span>)</span>:</span></span><br><span class="line">        <span class="comment"># 采集水晶矿</span></span><br><span class="line">        <span class="keyword">with</span> self._lock:</span><br><span class="line">            amount = min(amount, self.crestalRemain)</span><br><span class="line">            self.crestalRemain -= amount</span><br><span class="line">            self.crestalInControl += amount</span><br><span class="line">            <span class="keyword">return</span> amount</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">transport</span><span class="params">(self, amount=<span class="number">5</span>)</span>:</span></span><br><span class="line">        <span class="comment"># 传送狂热者</span></span><br><span class="line">        <span class="keyword">with</span> self._lock:</span><br><span class="line">            capacity = self.populationCap / <span class="number">2</span></span><br><span class="line">            available = self.crestalInControl / <span class="number">100</span></span><br><span class="line">            amount = min(amount, capacity, available)</span><br><span class="line">            self.zealot += amount</span><br><span class="line">            self.crestalInControl -= amount * <span class="number">100</span></span><br><span class="line">            self.populationCap -= amount * <span class="number">2</span></span><br><span class="line">            <span class="keyword">return</span> amount</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">build</span><span class="params">(self, amount=<span class="number">1</span>)</span>:</span></span><br><span class="line">        <span class="comment"># 建造水晶塔</span></span><br><span class="line">        <span class="keyword">with</span> self._lock:</span><br><span class="line">            available = self.crestalInControl / <span class="number">100</span></span><br><span class="line">            amount = min(amount, available)</span><br><span class="line">            self.populationCap += amount * <span class="number">10</span></span><br><span class="line">            self.crestalInControl -= amount * <span class="number">100</span></span><br><span class="line">            <span class="keyword">return</span> amount</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">forAiur</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="comment"># 为艾尔而战！</span></span><br><span class="line">        <span class="keyword">with</span> self._lock:</span><br><span class="line">            <span class="keyword">if</span> self.zealot &gt;= self._amond:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getStatus</span><span class="params">(self, role)</span>:</span></span><br><span class="line">        <span class="comment"># 获取状态</span></span><br><span class="line">        <span class="keyword">if</span> role == <span class="string">'archon'</span>:</span><br><span class="line">            <span class="keyword">return</span> &#123;</span><br><span class="line">                <span class="string">'crestalInControl'</span>: self.crestalInControl,</span><br><span class="line">                <span class="string">'crestalRemain'</span>: self.crestalRemain,</span><br><span class="line">                <span class="string">'populationCap'</span>: self.populationCap,</span><br><span class="line">                <span class="string">'zealot'</span>: self.zealot</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">elif</span> role == <span class="string">'pylon_transporter'</span>:</span><br><span class="line">            <span class="keyword">return</span> &#123;</span><br><span class="line">                <span class="string">'crestalInControl'</span>: self.crestalInControl,</span><br><span class="line">                <span class="string">'populationCap'</span>: self.populationCap</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">elif</span> role == <span class="string">'portal'</span>:</span><br><span class="line">            <span class="keyword">return</span> &#123;</span><br><span class="line">                <span class="string">'crestalInControl'</span>: self.crestalInControl,</span><br><span class="line">                <span class="string">'populationCap'</span>: self.populationCap,</span><br><span class="line">                <span class="string">'zealot'</span>: self.zealot</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">nexus = Nexus() <span class="comment"># 实例化对象</span></span><br></pre></td></tr></table></figure>
<h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>其实星际争霸二这个游戏在每场战局中都是一个典型的DAC模型：玩家主宰一切，而游戏中所有的操作都可以看作是将水晶矿和高能瓦斯（在我这里被简化掉了）这两种基础资源进行状态转化，成为玩家所需要的资源（生产单位，作战单位）并去消耗敌方的资源从而赢得战局。这说明RESTful服务的思想非常普适。</p>
<p>在<strong>为了艾尔</strong>这个小游戏中，我将几种角色固化，构造了一个RBAC模型。</p>
<p>在这次实践中，理解了RBAC在一个系统中的应用，并且进一步学习了flask这个超赞的框架，更加深入地理解了RESTful思想，收获良多。</p>
]]></content>
      
        <categories>
            
            <category> 技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 系统设计与分析 </tag>
            
            <tag> RBAC </tag>
            
            <tag> RESTful </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[RBAC概念与系统设计]]></title>
      <url>https://blog.thrimbda.com/2017/05/06/RBAC%E5%AE%9E%E8%B7%B5%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/</url>
      <content type="html"><![CDATA[<p><img src="http://blog.thrimbda.com/uploads/2017/05/07/RBACmodel.png" alt="RBACmodel"></p>
<h2 id="RBAC-的概念"><a href="#RBAC-的概念" class="headerlink" title="RBAC 的概念"></a>RBAC 的概念</h2><p>RBAC (<strong>R</strong>ole-<strong>B</strong>ased <strong>A</strong>ccess <strong>C</strong>ontrol) 以角色为基础的访问控制模型是一套较强制访问控制以及自由选定访问控制更为中性且更具灵活性的访问控制技术。</p>
<p>首先是RBAC中的几种对象：</p>
<ul>
<li>S = 主体 (Subject) = 一名使用者或自动代理人</li>
<li>R = 角色 (Role) = 被定义为一个授权等级的工作职位或职称</li>
<li>P = 权限 (Permission) = 一种存取资源的方式</li>
<li>SE = 会期 (Session) = S，R或P之间的映射关系</li>
<li>SA = 主体指派 (Subject Assignment)</li>
<li>PA = 权限指派 (Permission Assignment)</li>
<li>RH = 角色阶层 (Role Hierarchy)。能被表示为：≥（x ≥ y 代表 x 继承 y 的权限）</li>
</ul>
<p>其次各对象间具有如下关系：</p>
<ul>
<li><p><strong>主体</strong>和<strong>角色</strong>是多对多关系。</p>
<p>${\displaystyle SA\subseteq S\times R}$</p>
</li>
<li><p><strong>角色</strong>和<strong>权限</strong>是多对多关系。</p>
<p>${\displaystyle PA\subseteq P\times R}$</p>
</li>
</ul>
<a id="more"></a>
<h2 id="对RBAC的理解"><a href="#对RBAC的理解" class="headerlink" title="对RBAC的理解"></a>对RBAC的理解</h2><p>在了解RBAC相关概念之后，在此谈谈自己的理解。</p>
<p>RBAC是一种MAC (<strong>M</strong>andatory <strong>A</strong>ccess <strong>C</strong>ontrol) 即由系统管理员统一配置管理个用户角色。</p>
<p><strong>S</strong>（主体）<strong>R</strong>（角色）、<strong>SE</strong>（会话）的关系如上图所示，即虽然一个主体可以拥有多个角色，但主题在登陆系统后（即在与系统的一个会话期间）只能行使一个角色的权力，</p>
<p>而<strong>P</strong>（权限）由系统所提供的服务决定，实则是系统提供的资源以及对资源所进行的操作的的组合，也正是资源与操作的组合才使得权限这个概念有了意义。</p>
<h3 id="应用"><a href="#应用" class="headerlink" title="应用"></a>应用</h3><p>我对RBAC的应用场景的定义：<strong>一个资源由系统共有且具有多种分层的角色的责任分立的系统</strong>。</p>
<p>资源由系统共有，且具有多种、分层的角色，这表明系统中的资源对于每一个角色的意义都不一样，因此每个角色对资源承担的责任也因此而不一样，因此对于这样的系统，RBAC是一种十分合适的访问控制模型，可以有效地分配权利与责任，从而更好地保护与利用系统中的资源。</p>
<p>例如：商业公司、以及遵循最小权限原则 (Principle of least privilege) 的操作系统。</p>
<p>而对于一个资源由个人所拥有的系统来说，每个角色都是平等的，每个角色对于自己的资源具有完全的控制权，此时RBAC模型显得力不从心，而应该使用DAC (<strong>D</strong>iscretionary <strong>A</strong>ccess <strong>C</strong>ontrol) 模型，这在社交网络系统中十分常见。</p>
<p>实际的场景中不可能存在纯粹的共有资源与纯粹的独享资源，因此常常将这两种模型混合使用。例如：微信中普通用户可以对自己的“资源”（朋友圈）具有完全的管理权限。但普通用户无法对其他用户进行管理，“举报”这个功能的实现则有赖于系统中其他具有更高权限的角色进行干预。</p>
]]></content>
      
        <categories>
            
            <category> 设计 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 系统设计与分析 </tag>
            
            <tag> RBAC </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[初探并发]]></title>
      <url>https://blog.thrimbda.com/2017/05/06/%E5%88%9D%E6%8E%A2%E5%B9%B6%E5%8F%91/</url>
      <content type="html"><![CDATA[<p>很好，最近的一个小作业让我游行接触到真正有意义的并发编程。</p>
<a id="more"></a>
<h2 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h2><p>于是使用python的<code>queue</code>和<code>signal</code>还有<code>time</code>模块做了一个不算真正多线程的示意用的小小demo：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Author: Michale</span></span><br><span class="line"><span class="comment"># @Date:   2017-05-04 15:00:41</span></span><br><span class="line"><span class="comment"># @Last Modified by:   Michale</span></span><br><span class="line"><span class="comment"># @Last Modified time: 2017-05-07 00:46:52</span></span><br><span class="line"><span class="keyword">import</span> signal</span><br><span class="line"><span class="keyword">import</span> queue</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TestClass</span><span class="params">(object)</span>:</span></span><br><span class="line">    queue = queue.Queue()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        signal.signal(signal.SIGINT, self.stopIfPressKill)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">stopIfPressKill</span><span class="params">(self, mySignal, stack)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> mySignal == signal.SIGINT:</span><br><span class="line">            print(<span class="string">'you pressed CTRL-C'</span>)</span><br><span class="line">            self.queue.put_nowait(<span class="string">'stop'</span>)</span><br><span class="line">            print(self.queue.qsize())</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">mainThread</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            time.sleep(<span class="number">1</span>)</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> self.queue.empty():</span><br><span class="line">                data = self.queue.get()</span><br><span class="line">                print(data)</span><br><span class="line">                <span class="keyword">if</span> data == <span class="string">'stop'</span>:</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    self.queue.put(data)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    yoo = TestClass()</span><br><span class="line">    yoo.mainThread()</span><br></pre></td></tr></table></figure>
<p>解释一下三个模块的作用：</p>
<ul>
<li><code>queue</code>：作为消息队列，这里显然有点大材小用。</li>
<li><code>signal</code>：用来捕捉<code>KeyboardInterrupt</code>之后将停止信号置入消息队列。</li>
<li><code>time</code>：用来让主线程能够捕捉到这个<code>KeyboardInterrupt</code>。</li>
</ul>
<h2 id="思想"><a href="#思想" class="headerlink" title="思想"></a>思想</h2><p>多线程的引入使得非主线程在启动后就很难控制，所以迫使人们使用消息队列这样的方式实现线程间通信。</p>
<p>但其实不论是否是多线程，系统各个模块本就应该将细节封装起来，而使用事件是他们协同工作，这样对于降低系统耦合有很大帮助，这也是一个好的系统的设计思想：<strong>为变化而设计。</strong></p>
]]></content>
      
        <categories>
            
            <category> 技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> python </tag>
            
            <tag> 并发 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Thrimbda]]></title>
      <url>https://blog.thrimbda.com/2017/05/04/Thrimbda/</url>
      <content type="html"><![CDATA[<p>想出并考量了近一个月，决定使用新的ID: <strong>Thrimbda</strong></p>
<p>什么意思呢？</p>
<p>alive and thrive.</p>
<p>尾巴取自希腊字母英文发音lambda，这个字母代表着大智若愚。</p>
<p>所以</p>
<p><strong>Thrimbda</strong>!</p>
<a id="more"></a>
<p>我又不甘心这篇这么短就写完了，就再扯点别的吧。</p>
<h2 id="关于道和术"><a href="#关于道和术" class="headerlink" title="关于道和术"></a>关于道和术</h2><p>总结了一下，这世界上的学问无非分成两个层面：<strong>道</strong>和<strong>术</strong>。</p>
<p>道是概观；</p>
<p>是框架；</p>
<p>是胸有成竹。</p>
<p>术则是细节；</p>
<p>是实现；</p>
<p>是奇淫技巧；</p>
<p>我这个人</p>
<p>看不清自己的道</p>
<p>却在术上下了不少功夫。</p>
<p>多有徒劳啊！</p>
]]></content>
      
        <categories>
            
            <category> 随笔 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 总结 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[拨云见日]]></title>
      <url>https://blog.thrimbda.com/2017/04/26/%E6%8B%A8%E4%BA%91%E8%A7%81%E6%97%A5/</url>
      <content type="html"><![CDATA[<p>嘿，今天是张小弟的生日。每当遇到这种具有纪念意义的日子，都会忍不住回忆：去年的今天是怎么样的？前年的今天又是如何？</p>
<p>当然，为了有趣和有意义，这一切都必须建立在这个日子对我而言产生了他的纪念意义。而对应于张小弟的生日，这意味着从我认识他并且开始想要为他庆祝生日开始。好在我们认识地足够早，这九年的时间足够让我回忆很多事情。</p>
<a id="more"></a>
<p>首先我要在这个他无法看见的犄角旮旯发自内心地祝他生日快乐，希望我的这位朋友健康快乐，并且不会被生活的艰难吓怕，能够目光坚定地走在自己脚下的路上，反思一下自己好像自从大学以后我们的联系就渐渐变少，但却不是关系疏远，相反我认为我们的关系并没有收到距离的影响。大学之大，在于文化。</p>
<p>我见证了他近年来因安逸而踌躇，因背叛而悲伤，因心有所念而前进，因可爱而被爱，最终因为缘分而让我失去了两个朋友，多了一对虐我的狗。</p>
<p>人呐，顺意时候少，迷茫时候多。但是回忆起来当时认为的不顺意只是因为肚量还不够大= =</p>
<p><strong>我何尝不是这样？</strong></p>
<h2 id="讲一个故事"><a href="#讲一个故事" class="headerlink" title="讲一个故事"></a>讲一个故事</h2><p>语言是一种奇妙的能力，能够让巨量的信息在两个个体间迅速传递——决不是拷贝，是跃然，之后消逝于一种介质中，重生于另一种介质之上——在字句里，颦蹙间以及一切可能的方式里把永恒嵌在每一个转瞬即逝的动态之中。</p>
<p>这是怎样一个过程呢？</p>
<p>——腾跃而起，穿过封杀烟尘，越过飞禽走兽，离开了尘埃，离开了巨石，看着这些文字的你最终抵达了——月亮？</p>
<p>说实话我不知道你会到哪里去。</p>
<p>从前我认为人生就是一条条四通八达的道路，人们选择自己的路，志同道合则同路而行，人各有志则分道扬镳。</p>
<p>后来发现不是这么简单的，人生并不是一个连接了所有可能节点的完全图，只需要选择一条自认为的合理路径走过去这么简单，事实上，它是分层的，那么多的路啊，会随着距离的拉长而坍缩成模糊的痕迹，在这错综复杂的巨大有向图中，你很容易迷失方向。</p>
<p>幸运的是足够年轻使得一个人有足够的时间在这些边中跳跃穿梭，练习中总结出规律、信条、与方法论。</p>
<p>我们称之为<strong>拨云见日。</strong></p>
]]></content>
      
        <categories>
            
            <category> 随笔 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 感悟 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[观察者模式实力分析]]></title>
      <url>https://blog.thrimbda.com/2017/04/09/%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F%E5%AE%9E%E5%8A%9B%E5%88%86%E6%9E%90/</url>
      <content type="html"><![CDATA[<blockquote>
<p>一般地，面向对象分析与设计中存在三种事件处理的机制，除了普通的函数调用外，常常用到回调函数，而J2EE中还提供了一种基于监听方式的事件处理机制，请查阅资料，对Action以及ActionListener的机制进行分析，完成一个分析实例。</p>
</blockquote>
<p>首先了解观察者模式</p>
<a id="more"></a>
<h2 id="观察者模式-Observer-Pattern"><a href="#观察者模式-Observer-Pattern" class="headerlink" title="观察者模式 (Observer Pattern)"></a>观察者模式 (Observer Pattern)</h2><h3 id="真实世界中的观察者"><a href="#真实世界中的观察者" class="headerlink" title="真实世界中的观察者"></a>真实世界中的观察者</h3><p>观察者模式又称发布订阅模式，例如RSS（微信推送的爸爸）订阅，某博客（被观察者）的博主在更新博文后，订阅者的阅读器（观察者）上就会自动能够收到更新。这种发布-订阅的套路我们称作观察者模式。</p>
<h3 id="观察者模式"><a href="#观察者模式" class="headerlink" title="观察者模式"></a>观察者模式</h3><p>(<strong>G</strong>ang <strong>O</strong>f <strong>F</strong>our)对观察者模式的描述：</p>
<blockquote>
<ul>
<li><p>意图</p>
<p>定义对象间的一种一对多的依赖关系，当一个对象的状态发生改变时，所有依赖于它的对象都得到通知并被自动更新。</p>
</li>
<li><p>别名</p>
<p>依赖(Dependents)，发布-订阅(Publish-Subscribe)</p>
</li>
<li><p>动机</p>
<p>将一个系统分割成一系列相互协作的类有一个常见的副作用：需要维护相关对象间的一致性。我们不希望为了维持一致性而使各类紧密耦合，因为这样降低了他们的可重用性。</p>
</li>
</ul>
<p>…</p>
<ul>
<li><p>参与者</p>
<ul>
<li><p>subject（目标）</p>
<p>目标知道他的观察者。可以有任意多个观察者观察同一目标。</p>
<p>提供注册和删除观察者对象接口。</p>
</li>
<li><p>Observer（观察者）</p>
<p>为那些咋目标发生改变时需获得通知的对象定义一个更新接口。</p>
</li>
<li><p>ConcreteSubject（具体目标）</p>
<p>将有关状态存入各ConcreteObserver对象。</p>
<p>当他的状态发生改变时，向他的各个观察者发出通知。</p>
</li>
<li><p>ConcreteObserver（具体观察者）</p>
<p>维护一个指向ConcreteSubject对象的引用。</p>
<p>存储有关状态，这些状态应与目标的状态保持一致。</p>
<p>实现Observer的更新接口以使自身状态与目标的状态保持一致。</p>
</li>
</ul>
</li>
</ul>
</blockquote>
<p>可以发现观察者模式常常应用于：</p>
<ul>
<li>两个对象具有依赖关系。</li>
<li>一个对象更改时需要同时更改其他对象。</li>
</ul>
<p>相比于普通的函数调用以及回调函数，观察者模式的使用能够做到低成本维持对象间一致性，大大<strong>降低了对象间的耦合关系程度，同时可以达到广播的效果，这是前二者做不到的。观察者模式的使用大大</strong>提高了代码的可重用性**。</p>
<p><strong>而J2EE中的Action和ActionListener正是观察者模式的一个鲜活的例子。</strong></p>
<h2 id="J2EE中的Action-amp-ActionListener"><a href="#J2EE中的Action-amp-ActionListener" class="headerlink" title="J2EE中的Action&amp;ActionListener"></a>J2EE中的Action&amp;ActionListener</h2><p>Action&amp;ActionListener 可以很好地应用于MVC范式用来降低model和view的耦合程度。</p>
<p>找到一个很好的<a href="http://www.ulisespulido.com/2009/03/observer-design-pattern-and-java-swing.html" target="_blank" rel="noopener">例子</a>，代码如下所示：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.awt.event.ActionEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionListener;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.JFrame;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JOptionPane;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JTextField;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Frame</span> <span class="keyword">extends</span> <span class="title">JFrame</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  ActionListener observer1 = <span class="keyword">new</span> Observer(<span class="string">"First Observer"</span>);</span><br><span class="line">  ActionListener observer2 = <span class="keyword">new</span> Observer(<span class="string">"Second Observer"</span>);</span><br><span class="line">  ActionListener observer3 = <span class="keyword">new</span> Observer(<span class="string">"Third Observer"</span>);</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">Frame</span><span class="params">()</span></span>&#123;</span><br><span class="line">    setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">    init();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">    addChangingTextField();</span><br><span class="line">    pack();</span><br><span class="line">    setVisible(<span class="keyword">true</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">addChangingTextField</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//Observable class TextField. each time</span></span><br><span class="line">    <span class="comment">//An action or event occurs the observers will be updated</span></span><br><span class="line">    <span class="comment">//Almost all the Swing classes has this kind of behavior</span></span><br><span class="line">    JTextField dataTextField = <span class="keyword">new</span> JTextField();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Observer registering to the observable class.</span></span><br><span class="line">    dataTextField.addActionListener(observer1);</span><br><span class="line">    dataTextField.addActionListener(observer2);</span><br><span class="line">    dataTextField.addActionListener(observer3);</span><br><span class="line"></span><br><span class="line">    add(dataTextField);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String [] args)</span></span>&#123;</span><br><span class="line">  	Frame frame = <span class="keyword">new</span> Frame();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Observer</span> <span class="keyword">implements</span> <span class="title">ActionListener</span></span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> String name;</span><br><span class="line">  <span class="keyword">private</span> String message;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">Observer</span> <span class="params">(String s)</span></span>&#123;</span><br><span class="line">  	name = s;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line">    JTextField textField = (JTextField) e.getSource();</span><br><span class="line">    message = textField.getText();</span><br><span class="line">    JOptionPane.showMessageDialog(<span class="keyword">null</span>,</span><br><span class="line">    name + <span class="string">" has been confirmed about the change, Thanks!! "</span></span><br><span class="line">    + <span class="string">" The Message was: "</span> + message);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>两个类分别担任了Action/ActionListener的角色，<code>frame.dataTextField</code>在<code>addChangingTextField</code>方法中绑定了三个监听器（<code>observer1</code>, <code>observer2</code>, <code>observer3</code>），在frame中文本框被编辑后（状态改变），触发Observer中<code>actionPerformed</code>方法，显示相应文本。</p>
<p>在这个例子中，<code>frame.dataTextField</code>作为<code>ConcreteSubject</code>，<code>observer1</code>, <code>observer2</code>, <code>observer3</code>作为<code>ConcreteObserver</code>。而他们所实现的定义了Action/ActionListener方法的接口，则是相应的<code>Subject</code>和<code>Observer</code>。</p>
<p>在绑定观察者后目标并不关注观察者具体的行为，而只是在自身状态发生改变时通知观察者，由观察者自身决定做什么动作，因此这种方法就很nice，比显式调用函数或者执行回调函数的方式触发动作不知道高到哪里去了，值得学习一个。</p>
]]></content>
      
        <categories>
            
            <category> 技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 系统分析与设计 </tag>
            
            <tag> 设计模式 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[worktile需求管理实力分析]]></title>
      <url>https://blog.thrimbda.com/2017/04/05/worktile%E5%AE%9E%E5%8A%9B%E5%88%86%E6%9E%90/</url>
      <content type="html"><![CDATA[<h1 id="需求管理"><a href="#需求管理" class="headerlink" title="需求管理"></a>需求管理</h1><p>首先摘抄一段来自《人月神话》中有关项目管理举的一个典型的失败例子。</p>
<a id="more"></a>
<blockquote>
<p><strong>巴比伦塔的管理教训</strong></p>
<p>据《创世纪》记载，巴比伦塔是人类继诺亚方舟之后的第二大工程壮举，但巴比伦塔同时也是第一个彻底失败的工程。</p>
<p>这个故事在很多方面和不同层次都是非常深刻和富有教育意义的。让我们将它仅仅作为纯粹的工程项目，来看看在管理上有什么值得学习的教训。这个项目到底有多好的先决条件？他们是否有：</p>
<ol>
<li><p>清晰的目标？</p>
<p>是的，尽管幼稚得近乎不可能。而且，项目早在遇到这个基本的限制之前，就已经失败了。</p>
</li>
<li><p>人力？</p>
<p>非常充足。</p>
</li>
<li><p>材料？</p>
<p>在美索不达米亚有着丰富的泥土和柏油沥青。</p>
</li>
<li><p>足够的时间？</p>
<p>是的，没有任何时间限制的迹象。</p>
</li>
<li><p>足够的技术</p>
<p>是的，金字塔或锥形的结构本身就是稳定的，可以很好地分散压力负载。对砖石建筑技术，人们有过深刻的研究。同样，项目远在达到技术限制之前，就已经失败了。</p>
</li>
</ol>
<p>那么，既然他们具备了所有的这些条件，为什么项目还会失败呢？他们还缺乏些什么？两个方面——<strong>交流</strong>，以及交流的结果—— <strong>组织</strong>。他们无法相互交谈，从而无法合作。当合作无法进行时，工作陷入了停顿。通过史书的字里行间，我们推测交流的缺乏导致了争辩、沮丧和群体猜忌。很快，部落开始分裂—— 大家选择了孤立，而不是互相争吵。</p>
</blockquote>
<p>作者分析后发现，这个失败的项目所以失败的原因在于以下几点：</p>
<ul>
<li>无法交流</li>
<li>没有组织</li>
<li>系统范围太大</li>
</ul>
<p>因此，良好的需求管理是两方面的：<strong>面向需求</strong>，<strong>面向需求的管理</strong>。</p>
<p>在结合亲身使用经历后我选择分析Worktile这个项目管理工具。</p>
<h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>那么Worktile是如何解决上述问题的呢？</p>
<h3 id="首先回答Worktile是什么"><a href="#首先回答Worktile是什么" class="headerlink" title="首先回答Worktile是什么"></a>首先回答Worktile是什么</h3><p>官网的介绍：</p>
<blockquote>
<p>Worktile看板式任务协作，通过轻松拖拽任务卡片，团队成员可实时同步看板变化，敏捷协作。轻量级团队协作工具，让你的团队5分钟内即可快速展开协作，效率倍增。它简单、直观、易用、免费，提供无限制的成员、项目和存储空间，和你的团队一起飞</p>
</blockquote>
<p>整理之后我发现它有如下<strong>特性</strong>：</p>
<ul>
<li><p>面向项目的看板式任务管理</p>
<p>能够清晰地将任务分工，及时把控项目情况，每个任务包括检查项、分配人、截止时间、附件、评论等。</p>
</li>
<li><p>具有文件同步功能</p>
<p>有点类似GitHub，但不如其功能强大，个人认为有点鸡肋</p>
</li>
<li><p>共享团队日历</p>
<p>可以宏观上了解团队工作计划安排。</p>
</li>
<li><p>消息通知</p>
<p>分配新任务、提醒关注某个文件、或者有了新评论等时候可以得到通知。</p>
</li>
<li><p>分析统计视图</p>
<p>以可视化方式量化任务，以图表的方式直观看到项目进展、项目成员任务分配、项目热度趋势等。</p>
</li>
</ul>
<p>在了解他的特性之后，接下来关注如何使用Worktile进行需求管理。</p>
<h3 id="使用Worktile进行需求管理"><a href="#使用Worktile进行需求管理" class="headerlink" title="使用Worktile进行需求管理"></a>使用Worktile进行需求管理</h3><p>针对需求管理的流程，分析如何在worktile中体现：</p>
<blockquote>
<ul>
<li><p>提出需求</p>
<p>详细记录变更需求，可以把它看成是一个备忘录或者收件箱，需求提出者要能够非常容易的记录下需求的详细信息。</p>
</li>
</ul>
<ul>
<li><p>审核</p>
<p>确认是否要实施该变更需求，在这个过程中需要对变更进行评审，确认是否需要变更需求，以及需求对已有部分所带来的影响。</p>
</li>
</ul>
</blockquote>
<p>在Worktile中通过任务列表展示不同的变更流程。</p>
<p><strong>收件箱：</strong>在该任务列表中任何人都可以向这里提交变更需求请求，当你觉得有需要解决的需求事可以添加在这里；<br><strong>要做：</strong>确定要做的需求，可以把它统一放在该列表下，并添加相关的负责人；<br><strong>进行中：</strong>在该列表下，可以明确正在进行的需求，了解产品的进展；<br><strong>已完成：</strong>对于已经完成的需求，可以专门放在一个列表下，方便之后对产品的追踪。</p>
<blockquote>
<ul>
<li><p>实施</p>
<p>根据需求的详细要求进行具体的实施，其中可能涉及到产品、开发、设计人员的参与。</p>
</li>
</ul>
<ul>
<li><p>确认</p>
<p>对需求的结果进行质量保证，确认需求的实施是正确的。</p>
</li>
<li><p>度量</p>
<p>对需求的过程做度量分析，这个过程对于需求管理是非常重要的且有意义的，通过对这些需求的分析，就能知道当前项目的进展情况，以及存在的问题。</p>
</li>
</ul>
</blockquote>
<p>用标签来定义任务属性、通过任务优先级来定义需求处理的优先级</p>
<p>如果确认不做变更需求，直接把该需求归档即可，这样方便以后查询。</p>
<p>Worktile项目的分析统计视图中，可进行标签统计，而这对于需求管理的价值在于，我们可以通过需求属性的统计分析，了解到现有产品的进展，用户的多少痛点得以解决，并且可以通过列表统计来统计需求的完成情况：</p>
<h3 id="解决问题"><a href="#解决问题" class="headerlink" title="解决问题"></a>解决问题</h3><p>在对Worktile进行分析后，现在就可以回答最开始的问题了：<strong>Worktile是如何解决之前提到的问题的呢？</strong></p>
<p>我们可以使用Worktile灵活地实施需求管理的流程，它任务直观、提供讨论平台以及多种项目视图的特性，可以让我们方便地对定义系统，结合良好的管理，可以做到避免系统边界定义含糊等问题。</p>
<p>使用worktile，我们可以方便地变更需求记录，结合讨论、通知功能，可以起到一些简单的协同和沟通作用，每个成员都可以参与进来。</p>
<p>同时我们可以利用它的统计分析功能，方便地对项目的需求进行度量分析，分析整个项目当前变更状态。</p>
<p>至此Worktile解决了需求的管理、人员组织与交流等问题。</p>
<p>最后，需求管理作为整个项目管理中的一环，不应该项目管理的中的其他要素分割开来。</p>
<p>而需求管理只是Worktile可以发挥作用的一个方面，Worktile除此之外通过上述功能，可以实现对于整个项目生命周期的管理，提供了概念的完整性。</p>
]]></content>
      
        <categories>
            
            <category> 技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 需求分析 </tag>
            
            <tag> 系统分析与设计 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[答辩失败后的总结与思考]]></title>
      <url>https://blog.thrimbda.com/2017/03/28/%E7%AD%94%E8%BE%A9%E5%A4%B1%E8%B4%A5%E5%90%8E%E7%9A%84%E6%80%BB%E7%BB%93%E4%B8%8E%E6%80%9D%E8%80%83/</url>
      <content type="html"><![CDATA[<p>五个小时了，答辩结束后的我被扒掉一层皮一样，羞愧难当。默默地骑着自行车，隐身在梧桐道上，好在四下无人里都是陌生人，让我得到一丝喘息的机会。</p>
<a id="more"></a>
<p>逃避。</p>
<p>这的确是我来不及抽象成语言的想法，我害怕自己任何自欺欺人的可能。</p>
<p>所以我得想想：问题到底出在哪。</p>
<h2 id="答辩"><a href="#答辩" class="headerlink" title="答辩"></a>答辩</h2><p>我们将之前一直在做的，令我神往的在线评测平台Light列入申请大创的计划。为了得到支持，甚至也可能为了给我们自己一点压力，总之我们这样做了。阿铮要我来做这次大创的主持人，负责处理大创相关的事务。在匆忙提交了申请书之后，我得知立项答辩时间定于今天中午，而我有两天来准备本次答辩。</p>
<p>于是今天中午，我惨遭失败。评委们给我的感觉就是他们完全不知我所云，认为我是异想天开，空穴来风，想搞一个子虚乌有的扯淡玩意来骗钱。</p>
<p>问题出在哪里？</p>
<h3 id="外在原因"><a href="#外在原因" class="headerlink" title="外在原因"></a>外在原因</h3><p>今天总计进行了8组大创答辩，而我是最后一个。评委的确不专业，甚至有一种倚老卖老的感觉。但这个锅能由他们来背吗？</p>
<p>不能，如果我们的产品要面向大众，就必须足够简单，足够易于理解和使用。因此假如连身处相关领域的评委都不能够消化与理解，那么这一定是一个没有定义好的产品。</p>
<p>那么接着想想，问题出在哪里。</p>
<h3 id="表层现象"><a href="#表层现象" class="headerlink" title="表层现象"></a>表层现象</h3><p>我的PPT风格显然是出了什么问题，以至于在答辩报告结束后的提问环节，评委老师花了一半时间来指出PPT的问题，想必这个问题最直观，也最令人不爽。</p>
<p>这是由于我最近几次答辩以来我越来越坚信的一种理念导致的，即：PPT提纲挈领，而内容要以讲为主。</p>
<p>这本身没什么问题，但我这次几乎陷入到了一种病态地偏执：只有标题，没有正文，连内容都不全。</p>
<p>简约不是问题，问题在于简陋。</p>
<p>没有数据，没有图表，没有示例，一切可以让说明问题并且能够使演讲变得更加清晰的东西我都没有。</p>
<p><img src="http://blog.thrimbda.com/uploads/2017/03/29/light.png" alt="front page"></p>
<p><img src="http://blog.thrimbda.com/uploads/2017/03/29/light1.png" alt="definition"></p>
<p>但仅仅是PPT毁掉了这次答辩吗？恐怕还不是这么简单。</p>
<h3 id="表达能力"><a href="#表达能力" class="headerlink" title="表达能力"></a>表达能力</h3><p>我深知自己的弱点，表达能力严重不足。但是我真的清楚这一点吗？</p>
<p>其实即使以我这样的PPT，予以妥善的表述，对于本次答辩而言，还是有可能讲清楚的。</p>
<p>语言缺乏连贯性，逻辑缺少连通性，表达没有完整性，除此之外我还结巴，忘词，全都是致命伤。</p>
<p>因此表象的PPT问题暴露了我在表达力上的缺点。</p>
<p>但是这些缺点能够改变吗？我相信是可以的，但我在明知道自己有这些缺点的情况下没有采取适当的措施去避免这些问题的暴露——我本可以的。</p>
<p>还有什么？</p>
<h3 id="对项目的理解"><a href="#对项目的理解" class="headerlink" title="对项目的理解"></a>对项目的理解</h3><p>其实这样的类似的答辩在成都实训时候也有过一次。那次的PPT没有这此这么夸张，表达上也比这次要好很多，我自认为那次的秘诀在于我作为项目经理掌控全局：整个系统的详细设计都是我做的，我了解API服务器的每一处设计，以及他们为什么如此，我明确了解自己是在做一个什么样的系统，面向什么样的人群，以及未来可能的发展空间。</p>
<p>但这次不一样，我认为自己没有完全理解阿铮对整个系统的设想：对用户潜在需求的分析，对系统的定义，以及它的未来，尤其是未来的发展。</p>
<h3 id="归根结底"><a href="#归根结底" class="headerlink" title="归根结底"></a>归根结底</h3><p>归根结底，问题出在哪里呢？</p>
<p><strong>不走心。</strong></p>
<p>如果我对整个项目进行深入的思考拥有我自己的深刻理解；</p>
<p>如果我在答辩前进行排练；</p>
<p>如果我PPT多点内容；</p>
<p>想必这次答辩都不会丑陋到如此地步。</p>
<p><strong>总而言之，我感到羞愧。</strong></p>
<p>勤能补拙，而非宁静无以致远，我希望自己能够记住。</p>
<h2 id="思考"><a href="#思考" class="headerlink" title="思考"></a>思考</h2><p>晚饭后提着眼镜和一瓶子豆奶在校园里散步，在图书馆北侧发现了一个让我得以安静思考的小花园。</p>
<p>我在那里总结了为什么自己的答辩成了一团浆糊，同时想了想一个好的产品应该是什么样的。</p>
<h3 id="开个脑洞"><a href="#开个脑洞" class="headerlink" title="开个脑洞"></a>开个脑洞</h3><p>牛顿讲他自己只是在真理之海前捡贝壳的孩子，而我们是一个对知识有着无穷渴望的物种。</p>
<p>我认为在探索的旅途中有两种先驱者：</p>
<ul>
<li>技术的创造者</li>
<li>技术的变现者</li>
</ul>
<p>第一种高屋建瓴，值得被铭记，值得被载入史册，作为他那个时代的骄傲与自那以后历史的道标，提供了进步的可能。而第二种人，思考的足够深入足够彻底，将技术与人通过一种自然又和谐的方式联结在一起，真正地实现了进步。</p>
<p>——法拉第发现了电磁感应现象，爱迪生和特斯拉创造了整个电气时代。</p>
<hr>
<p>因此我对好的产品定义如下：</p>
<p>​    <strong>满足人的某种基本需求，足够方便使用，成为联结技术与人文的纽带。</strong></p>
<h3 id="回归起点"><a href="#回归起点" class="headerlink" title="回归起点"></a>回归起点</h3><p>我抬头望着参天的梧桐树，一切都是有结构的。</p>
<p>我们如何对事物进行抽象、建模并加以分析出内在的联系，如何从表层现象看到本质。</p>
<p>人组成的社会也是有结构的，思考的角度深度以及对信息资源的掌握也是一种划分结构的方式。如果每个人在出生的时候都是一样的，那么教育就是提供结构变动的梯子。然而这也无法解决信息不对称带来的矛盾，举例来讲站在这个结构高层的人与低层的人几乎只能通过媒体，类比C/S架构，的方式交流，而目前没有一种合适的办法高效匹配相关信息的索取者与供应者的办法（peer to peer）。</p>
<p><strong>也许Light可以解决这类问题？有待探索。</strong></p>
]]></content>
      
        <categories>
            
            <category> 随笔 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 总结 </tag>
            
            <tag> 思考 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[我终于想到了答案，但等等...问题是什么呢？]]></title>
      <url>https://blog.thrimbda.com/2017/03/20/%E6%88%91%E7%BB%88%E4%BA%8E%E6%83%B3%E5%88%B0%E4%BA%86%E7%AD%94%E6%A1%88%EF%BC%8C%E4%BD%86%E7%AD%89%E7%AD%89%E2%80%A6%E9%97%AE%E9%A2%98%E6%98%AF%E4%BB%80%E4%B9%88/</url>
      <content type="html"><![CDATA[<p>标题描述了一种虽然听起来神经但是还蛮常见的一种现象，至少我是这样，<del>你们一定也一样。</del></p>
<p>这篇是今天听课听到酣处有感而发，这大概是我一年来听得舒适的一天课了。</p>
<a id="more"></a>
<h2 id="关于上课"><a href="#关于上课" class="headerlink" title="关于上课"></a>关于上课</h2><p>我上课不听讲尔来一年有余，原因在于：睡觉太晚，上课太困，久而久之破罐子破摔。但今天灵机一动就决定跑去第一排听讲，想不到感觉很好。</p>
<h2 id="心得"><a href="#心得" class="headerlink" title="心得"></a>心得</h2><p>也不知道是因为近来积攒了一点点经验还是别的什么缘故，我认为今天《软件系统分析与设计》和《软件测试与评估》两位老师都提到了一些我很认同的观点。属于吃了亏才跑回来亡羊补牢。</p>
<ul>
<li>系统的概念</li>
<li>系统设计的重要性</li>
<li>需求的重要性</li>
<li>项目一定要签合同！！！！！！！！！！！！</li>
</ul>
<p>好了我不想写了，因为我把我想讲的问题忘了。</p>
<p>悲伤。</p>
]]></content>
      
        <categories>
            
            <category> 随笔 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 迷思 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[宁静致远]]></title>
      <url>https://blog.thrimbda.com/2017/03/19/%E5%AE%81%E9%9D%99%E8%87%B4%E8%BF%9C/</url>
      <content type="html"><![CDATA[<p>成都之行令人难忘。</p>
<p>然而现在坐在实验室里的我感到无所适从——说实话，每当我坐在实验室里的时候都会如此。</p>
<p>这种现象是因为对自己的生活没有计划。</p>
<p>所以我要做个计划。</p>
<p>宁静致远。</p>
]]></content>
      
        <categories>
            
            <category> 随笔 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 日常 </tag>
            
            <tag> 思考 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[实训日志（二）]]></title>
      <url>https://blog.thrimbda.com/2017/03/12/%E5%AE%9E%E8%AE%AD%E6%97%A5%E5%BF%97%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>实训即将走到终点，至此后端API服务器基本版的编码工作基本完工了，在这里总结一下。</p>
<p>作为项目组组长，我有关于软件项目管理的唯一知识来自于寒假里读过一遍的《人月神话》。经此一番实践，发现自己还是太嫩。但是仍然，我认为自己还是学到了一点东西。</p>
<a id="more"></a>
<h2 id="设计"><a href="#设计" class="headerlink" title="设计"></a>设计</h2><p>相比起两年前写C语言作业时候二话不说开VS写作业，今天的自己显然有了一些改变。</p>
<p><del>首先VS我已经很久没打开过了。</del></p>
<p>总之这两年我经历了在天真纯粹的学习python的那段时间的练习，还是机器人队编写机器人上位机时候的历练，又或者是编写教务处网站师生端爬虫的经历、参与橙汁项目时候写的文件管理工具这几个集中编写代码的历程。最开始当然还是莽上，但我估计前后矛盾的苦头吃多了就知道要提前设计了。入了设计的门，接下来就是程度的问题了——因此这次把控整个项目的经历算是一次非常有益的练习。</p>
<p><strong>首先明确要做什么</strong>，这个问题对于一个有心想做产品的团队来说至关重要：<strong>定义自己的产品</strong>，是战略层面的；但是遗憾这次没有什么有趣的想法，而责任在肩，认真做一个靠谱的、简单的项目是自己对这次实训的期待。</p>
<p>简而言之就是一个以<strong>微信小程序为主打特性的传统Web应用</strong>——具体要做的是一个目标管理系统。</p>
<p>这个东西做的人实在是太多了，因此对所要面临的事务的建模能够找到很多成熟的方案：诸如面向项目的Worktile；面向个人生活管理的WonderList；面向学生的My Study Life；甚至还包括Apple的<code>提醒事项</code>以及其他一些我听过但没有用过的工具。综合这些工具的特点，总结出一个经典的、微信特色目标管理系统——这就成了我们要做的<code>Seed</code>。</p>
<h3 id="应该具备的特性"><a href="#应该具备的特性" class="headerlink" title="应该具备的特性"></a>应该具备的特性</h3><p>那么<code>Seed</code>应该能做一些什么呢？</p>
<ul>
<li>拥有一个简单的用户系统，方便同步，同时提高用户粘性。</li>
<li>用户可以自由创建并管理目标，这个目标与worktile的<code>项目</code>类似。</li>
<li>用户可以被邀请进入别人的目标。</li>
<li>目标分为日常打卡类（循环）和项目攻坚类（一次性，可以引入里程碑）。</li>
<li>主打的前端是微信小程序。</li>
<li>也兼容其它的潜在的客户端。</li>
</ul>
<p>由此看来，<code>Seed</code>应该是一个小而精简的实用性服务，这点和微信小程序的初衷不谋而合。</p>
<p>在这里必须要强调“<strong>小而精简</strong>”这个特点。为什么要小而简单呢？一是人手不够时间有限。二要避免来自《人月神话》中提到的<code>第二次项目</code>容易犯的错误：盲目自大，疯狂地给一个项目添加无穷无尽的冗余。这是一种出力不讨好的蠢事，尤其——我们不涉及广告收入。举个简单的例子：Mac OS版迅雷和Win 版迅雷，显然大家都会喜欢精简使用的Mac版。</p>
<p>同时也要对微信小程序有良好的兼容性，为了提供良好的用户使用的平滑性，应该在支持email作为用户登录名的同时支持微信openId作为登录凭证。</p>
<h3 id="系统的结构"><a href="#系统的结构" class="headerlink" title="系统的结构"></a>系统的结构</h3><p>上文提到我们要做一个以微信小程序为主打特性的Web应用，这就是说<code>Seed</code>具有兼容其它前端的能力<del>与野心</del>。因此RESTful风格的API就成为了最佳选择：前后端完全解耦，结构清晰，消费方便。</p>
<p>因此<code>Seed</code>应该是一个由微信小程序和其他一些潜在的形式作为前端，通过HTTP协议消费后端提供的<code>资源</code>。</p>
<p>后端通过API来提供安全可靠的服务。</p>
<p>为此也学习了一些，接触到HATEOAS(Hypermedia As The Engine Of Application State)（超媒体即应用状态引擎）的思想，虽然不成熟，但却是一种可能的未来。</p>
<h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><p>由于只参与了API服务器的编码工作中，因此这里只谈后端的实现。</p>
<p>我喜欢把设计划分到为战略层面（道），剩下的工作划分到战术层面（术）因此，选用什么技术、如何具体去实现一个系统可以算在这里。</p>
<h3 id="技术"><a href="#技术" class="headerlink" title="技术"></a>技术</h3><p>出于实训的要求，也出于对Java语言的合理使用的渴望，选用<code>Spring Framework</code>作为后端框架，顺带使用了Spring全家桶：</p>
<ul>
<li>Spring Boot作为应用容器</li>
<li>Spring Framework实现业务逻辑</li>
<li>Spring Data作为DAO</li>
<li>Spring Session管理Session</li>
<li>Spring test测试</li>
</ul>
<p>此外使用Git、TravisCi、Heroku等工具提升开发体验。</p>
<h3 id="开发过程"><a href="#开发过程" class="headerlink" title="开发过程"></a>开发过程</h3><p>之前也提到Spring的Controller编写体验与Python Flask Web框架体验十分类似，也许Flask从Spring中得到了一些灵感？面向资源的控制器类我认为比起针对每一项资源都要写一个Servlet的传统Java Web显得要紧凑很多。</p>
<p>Spring提倡测试驱动开发，真要这么做起来到不是一件容易的事情，毕竟测试不是一向讨喜的工作。真要分配一个专人去编写测试代码，一学习成本很高，其次还有一些人情方面的问题。所以在开发中我决定让让每个人负责测试自己编写的代码。最终由我去审阅代码。</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>有关<code>Seed</code>本身的值得一讲部分已经讲完了，接下来谈谈别的。</p>
<h3 id="对自己的总结"><a href="#对自己的总结" class="headerlink" title="对自己的总结"></a>对自己的总结</h3><p>在实训中学到了很多，但仍有问题。</p>
<p>作为项目经理我算是菜得抠脚。对进度的把控、人员的分配以及其他一些细节的把握都有大把不足之处。</p>
<p>举例来讲：</p>
<ul>
<li>对前端技术知识的匮乏使得本次项目最终很可能只有API服务器可以工作。</li>
<li>项目小组中只有半数人真正参与了进来。</li>
<li>对参与工作的人的培训显得空洞且缺乏耐心。</li>
</ul>
<p>显然我还是需要进一步锻炼的。但同时作为项目经理和开发人员引出了我对另一问题的思考。</p>
<h3 id="关于SEer两种能力的讨论"><a href="#关于SEer两种能力的讨论" class="headerlink" title="关于SEer两种能力的讨论"></a>关于SEer两种能力的讨论</h3><p><strong>对整个系统的架构与把控能力</strong>和<strong>实现单一功能的算法选择、裁剪、使用能力</strong>。</p>
<p>我校的软件学院的课堂教育似乎只专注于后者，这也不算是一件怪事，毕竟对算法的掌握很容易度量，可以说是能力优劣差异显著，就好比解数学题，严格的前提条件与限制下人们的创造力十分便于评测。但合理制定这个所谓的“严格前提条件与限制”的能力虽然重要，却难以衡量。</p>
<p>至于为什么说自我矛盾，举个简单易懂但可能不十分恰当的例子，大家都知道家长以怕耽误学习为由严禁孩子早恋，却又希望孩子在毕业后立马能构成家这样的想法是幼稚而不切实际的。而隐含地期待学生在<strong>仅仅</strong>拥有良好学习成绩的情况下毕业后成为一个全才也是一种略微扭曲的想法，这两种情况的区别在于后者的矛盾不如前者那般尖锐。</p>
<p>我认为这样的实训的确是针对课堂教育的不足而作出的补偿，是有机会避免作为培养手段的<strong>成绩</strong>与作为培养目标的<strong>能力</strong>这两种符号所代表的事物之间的矛盾的。</p>
]]></content>
      
        <categories>
            
            <category> 技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 感悟 </tag>
            
            <tag> 日常 </tag>
            
            <tag> 实训 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[实训日志（一）]]></title>
      <url>https://blog.thrimbda.com/2017/02/22/%E5%AE%9E%E8%AE%AD%E6%97%A5%E5%BF%97%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>嗯，今天是实训的第三天，目前看来和之前预想的区别很大。</p>
<p>之前吐槽过这里的网以及网速：宿舍完全没网，上课的地方网速较差。这样一折腾让我突然发现自己网瘾很大，不过私以为这没什么问题，网络完全可以成为启迪人们心智的“卡拉”，继而让我们整个物种升华成为一个高度发达的……</p>
<p>言归正传，这两天在学习Spring framework，让人有种耳目一新的感觉，初来乍到的我不禁感叹道Java代码竟然也可以如此优雅。</p>
<a id="more"></a>
<p>这样一感叹就暴露了我有多菜，转念一想什么语言不能优雅。优雅是缜密思考过后精心设计的智慧结晶，和载体好像并没有多大关系。</p>
<h2 id="RESTful"><a href="#RESTful" class="headerlink" title="RESTful"></a>RESTful</h2><p>使用Spring框架现阶段主要是为了构建Web应用，跟着官网的教程走了一遍下来，顺便也温习了RESTful架构的好处，总结下来有如下几点：</p>
<ul>
<li>前后端解耦，由于这种架构是面向资源的，所以格式化的文本（多数情况是JSON？）而不是整个HTML页面作为Response，使得前后端可以完全分离。</li>
<li>表现清晰，RESTful充分利用了HTTP协议的特性，使用URI请求资源而不是一长串由<code>&amp;</code>分开的QueryString，体现了HTTP（超文本传输协议）的设计思想，而不仅仅是把它当作底层传输协议，而上层瞎搞。严格定义了对资源的CRUD操作，并利用HTTP verb实现。</li>
</ul>
<p>我也是才从古代Web开发思想中穿越过来不久，理解的大概还不很透彻，如有误区，请不吝赐教！</p>
<h2 id="Spring作为一个Web框架"><a href="#Spring作为一个Web框架" class="headerlink" title="Spring作为一个Web框架"></a>Spring作为一个Web框架</h2><p>从大二 Java Web 课程大作业到现在为止正好一年的时间，已经接触过几个Web开发技术了，我还能想起来当时第一次把应用部署到服务器上从手机访问并成功那时候激动的心情 :) 用有好奇心，追随着好奇心开拓未知的领域，这的确是一件美好的事情。</p>
<p>从Java的<code>JSP</code>到Python的<code></code>Django<code>再到</code>Flask<code>最终回到Java，我遇见了</code>Spring`。</p>
<p>JSP是一个真正的古代技术，用起来真是太繁琐了，尤其是在开发后期为了某项功能而改来改去的时候，整个Servlet就会变成一个巨大的冗长的恶魔，而JavaBean遇到有关数据库连接并且要求分页的时候，想要做到优雅简直就是痴人说梦，而本意是为了体现高可复用性的JSP页面会因为各种<code>&lt;%if(...)%&gt;</code>语句而变得面目全非，以至于我能够写出<a href="./迷之代码.md">让自己怀疑人生的代码</a>。我应该还会写一篇专门反省自己犯下这些滔天罪过的文章，话说回来，我甚至不知道怎么用JSP写RESTful风格的Web服务</p>
<p>事情到了Python这里变得清晰明了了起来，不论是<code>Django</code>的能力强大还是<code>Flask</code>的简明清晰，总之区别于最基础的开创道路的技术，有关框架还是显得要简明许多。如果把开发者分个级，第一层是技术的开创者，最后一层是应用程序的使用者（就算是完全拿来主义的开发者了），我认为框架（framework）的开发者处于第二层的位置。他们将某项常用技术的开发流程加以总结，从中抽取出最常用、最基础、最精华的部分编写成可复用的构件，就成为了一个优秀的框架。正因为如此，优秀的框架也都是从真正的应用项目上剥离出来的，<code>Django</code>如此，<code>Spring</code>也是这样。</p>
<p>但归根结底，我觉得<code>Spring</code>跟<code>Flask</code>更相似一点，他们都十分轻盈，几乎不会给人什么限制。也许<code>Flask</code>的开发者从<code>Spring</code>这里汲取了一些灵感也说不定。</p>
<h3 id="有趣的地方——有关符号"><a href="#有趣的地方——有关符号" class="headerlink" title="有趣的地方——有关符号@"></a>有趣的地方——有关符号<code>@</code></h3><p>在学习的过程中我注意到Spring的控制器路由是由Java的语法特性”annotation“实现的，对于这个特性我有待进一步学习，巧的是<code>Flask</code>中也是使用了样的形式，只不过在Python里<code>@</code>乘坐装饰器，一个用来包装函数用的语法糖，浏览过一些资料，这个特性好像确实是python借鉴Java但功能更复杂的一个语法特性。</p>
<p>因此，本就对<code>Flask</code>很欣赏的我看到这一点的时候不禁对<code>Spring</code>好感度大增。</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>总而言之，我的水平目前还很不到家，所以也没有提及<code>Spring</code>的一些核心特性诸如Ioc、DI等，但它让我意识到Java这个看似垂垂老矣的语言为什么仍然经久不衰，同时也让我对Java好感度大增。</p>
<p>期待着能够学习更多内容，真是Exciting。</p>
<p>就用一个经典的日志结语：“今天真是有意义的的一天。“</p>
]]></content>
      
        <categories>
            
            <category> 技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 日常 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[成都2017]]></title>
      <url>https://blog.thrimbda.com/2017/02/20/%E6%88%90%E9%83%BD2017/</url>
      <content type="html"><![CDATA[<p>在三年前的那个暑假的成都之行愉快又迷醉的七天里，我大概不会想到自己会在不到四年的时间里再次回到这个城市。</p>
<p>怀着怎样的心情，驮着怎样的包袱，打算施展什么样的抱负。</p>
<a id="more"></a>
<p>早在大一的宣讲会上就听说软院大三有实训，会去昆山或者成都。时间飞逝，紧接着就在大三的寒假里得到了要来成都的消息。</p>
<p>寒假里的学习计划根本没有得到落实，到现在就只是看完了《人月神话》，剩下的绝大多数有效工作时间都在搞自己那个恼人的项目，到现在也没彻底完结。算是陷入到了所谓的“焦油坑”之中。但话说回来，时间也没有完全被浪费掉，做项目总比打游戏然后懊悔强，我是这么想的。</p>
<h2 id="成都之行"><a href="#成都之行" class="headerlink" title="成都之行"></a>成都之行</h2><p>说到成都，给我这个外地人的印象就是一个吃货的圣地，一个休闲之都，天府之国。但我又不是一个吃货，所以这样看来成都对我而言是没啥吸引力的。但是高三暑假答应了同学要一起出来玩，成人之美嘛——于是就一起来了。当时查过机票以后发现去重庆的机票十分便宜，我们就决定现在重庆玩两天之后坐高铁前往成都，一路吃吃喝喝，觉得这里和预想中的没什么不同。倒是真的见识到了成都人们安逸的生活状态，有时看到街上的老成都闲庭信步，自己的心情也跟着放松了下来，但可惜那时候心不在焉，总是想着别的事情，来的这一趟也不真实。</p>
<p>于是现在也没了新鲜感，没有私下里给这次实训加上什么不真切的期待，唯一的期待就是希望自己能够静下心来。</p>
<p>除了差点搞错是哪个车站出发（一个我从来没去过的叫做西安南站的地方），一路上都还算顺利，我们一行6个人就这样来到了这个安逸的城市。</p>
<p>目的地在成都西北方向，在郫县的郊区里，据说坐车要两个小时，我满心以为是个怎样的荒凉地方。六点多下了车，火车站有个大叔从我们出站就一路跟着我们想做那天第一笔拉客生意，我们不胜其烦于是如了他的愿——6个人每人25把我们拉到站，还算合适。</p>
<p><strong>于是我领教了成都司机的厉害。</strong></p>
<p>十几个红绿灯，司机大叔趁着天还没亮愣是一个也没停，一个七座商务车，一路八十公里每小时开过来毫无畏惧真是比西安的的哥路子还野。</p>
<p>抵达以后发现比我想象的要漂亮很多，完全没有县城的感觉，倒像是一个大城市的样子，高楼林立。</p>
<h3 id="关于菁蓉镇"><a href="#关于菁蓉镇" class="headerlink" title="关于菁蓉镇"></a>关于菁蓉镇</h3><p>生活几天后觉得这个地方很奇怪，有一种瘆人的感觉——人如此少，处处都充斥着鼓励创业的鸡血：马云、雷军、李彦宏甚至乔布斯、比尔盖茨等人的照片绘制成巨展宏幅挂在路边的高楼上，一个街区里竟然有3家咖啡厅。真是煞有介事。</p>
<p>于是我怀揣着十足的好奇心去知乎搜索了一下，得到这样的结果：</p>
<ul>
<li><a href="https://www.zhihu.com/question/38584390" target="_blank" rel="noopener">菁蓉镇，成都首个创业主题小镇，会成为新中关村吗？</a></li>
<li><a href="https://www.zhihu.com/question/38545586" target="_blank" rel="noopener">如何评价成都的互联网行业的现状以及未来趋势?</a></li>
</ul>
<p>总结下来就是响应国家“全民创业”号召，在富士康遗留地产之上拔地而起的一座现代化小镇。目前处于发展初期，政府配好基础设施，之后提供相当好的福利招商引资，发展成一个创业人才/公司孵化基地，这和成都新市长的新发展政策有关，最终目的是成为下一个中关村，甚至下一个硅谷。</p>
<p>但我也觉得创业有环境应该也有方法论，不能一味打鸡血，具体这个地方将来会发展成什么样子，拭目以待吧。</p>
<h2 id="新学期，“新气象”"><a href="#新学期，“新气象”" class="headerlink" title="新学期，“新气象”"></a>新学期，“新气象”</h2><p>我以为过来就会有一个网速极佳，环境舒适，每人一个工位的工作环境，谁知道竟还是要上课，而且宿舍没网，上课的地方网速差劲。</p>
<p>在这样的环境下我完美地错过了概率论的重修以及软件项目管理的报名 :) （就晚了一个小时）</p>
<p>至于为什么有这一个重修一个补考，前一个是因为缓考瞎逼不认真复习导致挂科以至于连不考的机会都没有，后一个是因为缺课次数太多而被禁止考试。不过往好里想，我的大学圆满了 :)</p>
<p>说到底就是我自己一天脑子不知道都在想些啥，就是不操心自己的事情，因此吃亏也算是家常便饭。</p>
<p>错过了报名在今天学校管理日益严格的情况下意味着大概就是下学期见。</p>
<p>总之，吃一堑长一智吧。</p>
<h2 id="回到主题"><a href="#回到主题" class="headerlink" title="回到主题"></a>回到主题</h2><p>这次来成都最主要的目的是要做实训，意在学习一点实际的知识；以标准、规范的流程开发软件。</p>
<p>有了之前不算成功的做私活经历，这次我是带着耳朵来的，真的想虚心学点东西。</p>
<p>但是按照要求只能做Java开发，这就导致不能继续之前和同学合作的<a href="https://github.com/function-x/Orange-Juice" target="_blank" rel="noopener">Orange-Juice</a>项目，因此也就重新分组了，室友们盛情难却要我留下来，我就压下自己的那一点遗憾吧——毕竟做什么不是做呢，重要的是要认真。</p>
<p>所以——摒除杂念，犯下的错误都过去了，是时候静下心来坐住这一个月了。</p>
<p>听说西安又下雪了，成都呢，则是下了雨。这里的空气很潮，夹杂着一丝寒意。</p>
<p>我希望自己能够安静地一步一个脚印地向前走。</p>
]]></content>
      
        <categories>
            
            <category> 随笔 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 感悟 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[迷之代码]]></title>
      <url>https://blog.thrimbda.com/2017/02/14/%E8%BF%B7%E4%B9%8B%E4%BB%A3%E7%A0%81/</url>
      <content type="html"><![CDATA[<p>今天review自己的代码居然看到了这样的东西：</p>
<p><strong>已知A与B互斥</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(A) &#123;</span><br><span class="line">  something1;</span><br><span class="line">  <span class="keyword">if</span>(B) &#123;</span><br><span class="line">    something2;</span><br><span class="line">  &#125;</span><br><span class="line">  something3;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>那我真是觉得自己大概脑子出了什么问题。</p>
]]></content>
      
        <categories>
            
            <category> 技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 碎碎念 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[登岳渎阁]]></title>
      <url>https://blog.thrimbda.com/2017/02/12/%E7%99%BB%E5%B2%B3%E6%B8%8E%E9%98%81/</url>
      <content type="html"><![CDATA[<p><img src="http://blog.thrimbda.com/uploads/2017/02/12/yuedu1.jpg" alt="岳渎阁"></p>
<h1 id="登岳渎阁"><a href="#登岳渎阁" class="headerlink" title="登岳渎阁"></a>登岳渎阁</h1><p>峰峦如聚，波涛如怒，山河表里潼关路。</p>
<p>岳渎相望，八百里秦川尽收眼底：</p>
<p>君不见——阡陌交通，鸡犬相闻，风调雨顺，人杰地灵！</p>
<p>此地北眺黄土高原之壮阔，南临秦岭华岳之雄浑；承渭水浩浩汤汤之恩泽，育华夏璀璨磅礴之文明！</p>
<p>愿闻鸡起舞，继往开来！</p>
<p>幸甚至哉，歌以咏志。</p>
<a id="more"></a>
<p><img src="http://blog.thrimbda.com/uploads/2017/02/12/yuedu2.jpg" alt="岳渎阁"></p>
<p><img src="http://blog.thrimbda.com/uploads/2017/02/12/yuedu3.jpg" alt="岳渎阁"></p>
]]></content>
      
        <categories>
            
            <category> 随笔 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 雅兴 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[搭好博客后的一点话]]></title>
      <url>https://blog.thrimbda.com/2017/02/06/%E6%90%AD%E5%A5%BD%E5%8D%9A%E5%AE%A2%E5%90%8E%E7%9A%84%E4%B8%80%E7%82%B9%E8%AF%9D/</url>
      <content type="html"><![CDATA[<p>用了两天时间搭好了自己的博客，这时候满腹金光，想讲上个三点。</p>
<a id="more"></a>
<h2 id="事出有因"><a href="#事出有因" class="headerlink" title="事出有因"></a>事出有因</h2><p>在1月25号回家以后，喜气洋洋地过了个年。</p>
<p>我这个人有个毛病，就是放假回家以后绝对学不了习，以前高中时候还偶尔有作业能在周末的时候约束一下自己，现在则是无法无天。但是毕竟也不能放任自己天天在家里胡作非为，生活习性是不好改，人是活的嘛，于是趁着初八年过得差不多了立马从自己的魔爪中逃回了学校。实验室有一个好，环境再舒适我也是能拿出不切回windows玩游戏的毅力的。</p>
<p>回学校以后改了改自己那个做的半死不活的网站，便念想起自己觊觎了很久的个人博客。以前因为<a href="http://www.jianshu.com/" target="_blank" rel="noopener">简书</a>支持markdown，我就兴冲冲跑去注册。在写了一两篇随笔之后，还是觉得限制太多，太不自由，说是鸡蛋里挑骨头也没什么问题。看到<a href="https://zccz14.com/" target="_blank" rel="noopener">阿铮的博客</a>弄得风生水起，我立马感觉自己图漾还是得学习一个。</p>
<h2 id="动手研究"><a href="#动手研究" class="headerlink" title="动手研究"></a>动手研究</h2><p>其实阿铮是写过一个教程的：<a href="https://zccz14.com/2016/12/30/%E4%BC%98%E9%9B%85%E5%9C%B0%E4%BD%BF%E7%94%A8Hexo/" target="_blank" rel="noopener"><em>优雅地使用 Hexo</em></a>；写的很详细，照着一步一步来很快就能搭好。但是我最开始眼瞎没看见，于是就带着十足的劲头自己捣鼓。</p>
<p>也因为上述原因，我决定不再自己写一个教程了，就简单地把自己的<strong>心路历程</strong>记录下来，该有链接的地方加上链接。</p>
<p>首先注意到了hexo这个博客框架。经过一晚上的研究，搭好了hexo博客，安装了NexT主题，自己配置一番，部署到<a href="https://pages.github.com/" target="_blank" rel="noopener">GitHub Pages</a>上并且设置了域名解析。</p>
<p>至此博客就搭建完毕了，到这里也就可以止步了。但是心里还是觉得这个静态博客每次更新都得手动生成、发布有点麻烦，想看看有什么方案能使这个本身就比较方便的方案更加方便一点，说白了就是懒，懒的一逼。<del>但话说回来这个世界不就是因为懒人们为了让自己能够舒服地犯懒所以才能进步的吗</del></p>
<p>于是发现了NexT（就那个主题）的发起人置顶的一篇博客，讨论是否能应用Travis Ci的自动构建持续集成这种造福人类的服务去自动更新博客，但第二天早上要早起，于是就先移植了自己简书上的两篇文章过来填上这个漂亮花瓶然后早早睡觉了。</p>
<p>昨天去玩了一整天，没动这个，今天回到实验室接着捣鼓。结果突然发现了阿铮的那篇教程，使用Travis自动构建，不知道高到哪里去了，令人心悦诚服：</p>
<blockquote>
<ul>
<li><p>快速部署</p>
<p>根据 Git 的特性，尽量让纳入版本控制的文件小而多，只包含源码。</p>
</li>
<li><p>自动部署</p>
<p>不需要手动使用 <code>hexo deploy</code> 进行部署。只需要将源码传到 GitHub 上，它就能自动部署。</p>
</li>
<li><p>免安装</p>
<p>在没有 node.js 环境与 hexo 命令行工具，甚至没有 Git 时，也能编写/发布博客。</p>
</li>
</ul>
</blockquote>
<p>到这里我心满意足地搭好了自己的博客。</p>
<h2 id="满腹金光"><a href="#满腹金光" class="headerlink" title="满腹金光"></a>满腹金光</h2><p>之后，作为博客搭建好了用来祭天的文章的结语，我想用这个我一个小时前自己造的这个听起来就很傻的词作为这段的标题，表达自己心里得到了一点点体会。</p>
<p>新年新气象！这也是农历新年后的第一篇文章。</p>
<p>之前为了线性代数考试疯狂从零学起学了三天时间，每一天我都在感叹：如果自己能够在平时的生活中每天都能像这样用功该多好。所谓“骐骥一跃，不能十步。驽马十驾，功在不舍。”这大概就是一个例子，何况我也不是骐骥。</p>
<p>其实这应该作为我一生追求的目标：锲而不舍。</p>
<p>心中有所希冀，并且踏实地走。</p>
]]></content>
      
        <categories>
            
            <category> 随笔 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 感悟 </tag>
            
            <tag> 分享 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[送给活宝们的绝活]]></title>
      <url>https://blog.thrimbda.com/2017/01/13/%E9%80%81%E7%BB%99%E6%B4%BB%E5%AE%9D%E4%BB%AC%E7%9A%84%E7%BB%9D%E6%B4%BB/</url>
      <content type="html"><![CDATA[<p>2017-02-05更：</p>
<p>前几天聚会碰巧碰见一个大学也跟我同校的师兄，闲来聊天就问我高中在那个学校，我说黄河。他惊叹：“那你一定是你们学校状元吧！”</p>
<p>我上大学之后，这个问题被西安土著同学问过很多次，回答无非是上面这样的惊叹或者表示不知道这个高中。</p>
<p>其实我宁愿自己能讲：“我高中是倒数第一。”</p>
<a id="more"></a>
<h2 id="对标题的解释"><a href="#对标题的解释" class="headerlink" title="对标题的解释"></a>对标题的解释</h2><p>标题中带有两个很口语化的词：<strong>活宝</strong>、<strong>绝活</strong>。虽说是懂者自懂，但我还是觉得有必要解释一下，也算是负责任。</p>
<p>这两个词绝对带有很浓的个人色彩，那是我高中的班主任——老曹的口头禅。师出老曹，许多这样的词语你在悠悠三年里恐怕不知道能听上多少遍，但即便是毕业三年后的今天，我也不敢说自己是出师了的，可以说是站在门口，伸进脑袋张望了一番罢了。至于<strong>是什么门，什么是门</strong>，希望能够仔细思考。</p>
<p>仅以此篇赠来自高中的诸师弟妹。</p>
<h2 id="自我介绍"><a href="#自我介绍" class="headerlink" title="自我介绍"></a>自我介绍</h2><p>出于某种未完全的行当习性，我不想对这篇文章的读者有太大的限定，因此也不会对其有比师弟妹们更多限制性的假设——我不应该是大你们三岁的师兄，也不应该是大你们六岁的。<br>出于这样的考虑，我希望你仅仅是把我当做是我所叙述的那样<strong>基本的</strong>、<strong>不加任何多余标签</strong>的<strong>人</strong>来看待——我希望你能够清楚地理解我写这篇文章的目的。</p>
<h2 id="司马昭之心"><a href="#司马昭之心" class="headerlink" title="司马昭之心"></a>司马昭之心</h2><p>至于为什么写这篇文章，我心里纠结了很久，却总也找不到一个正当的理由作为一篇赠序送给别人。我们如此矛盾：一个人有多大能耐才能有这个资格去站在某个高度上去教育别人呢？<strong>他既不需要有这个资历又永远也不可能达到有这个资历的程度。</strong><br>那我就索性不去考虑这个资历的问题，写是因为有一种暗藏在我自己心里很久的一种冲动去讲述，是分享人生的经验。但我骨子里是觉得通过向你们讲述，从而对（从前的）自己有所总结，有所交代：互惠互利，未尝不可。</p>
<h2 id="三人行必有我师焉"><a href="#三人行必有我师焉" class="headerlink" title="三人行必有我师焉"></a>三人行必有我师焉</h2><p>我在高中时候自认为是一个聪明绝顶的人，因此到现在为止，我也从来没有因为某个人有多聪明而去佩服他。但仍然，我喜欢和聪明人打交道，原因在于交流方便。<strong>但我那时没搞懂过聪明与年轻的区别。</strong></p>
<p>高一有一同学，我们叫他J。<br>J的脑子十分好使，以至于那时候我也觉得他聪明。有闪光必然惺惺相惜。高中课本知识片面，漏洞百出（知识的漏洞），尤其是理化生这三门，几乎在每一页纸上都能够找得到书中有所暗示却没有讲解的问题。我们于是天天带着这些问题去隔壁办公室去烦老师——这是一种十分值得赞扬的学习态度——有时候老师思考片刻将答案告诉我们，有时候他们则会以<code>“高考又不考”</code>这样的理由来搪塞我们——现在想来可能我们问的问题确实太过刁钻，但在当时我们立马将其上升到为<code>“中国教育制度就是一个制造垃圾的工厂”</code>这样的高度上，真的是太聪明了。<br>很快我们就膨胀起来，J更甚一步。可能确实是出于这样的原因，我现在回想起来J，就只剩下他说话三句不离<code>“智商”</code>二字以及带着满满的自负的一句<code>“一群傻×。”</code></p>
<p><strong>这是思而不学</strong></p>
<p>的确，我常常思考着有关星辰大海的问题一直到晚上十二点。心中有日月，但是却不懂得<code>“骐骥一跃，不能十步，驽马十驾，功在不舍”</code>的道理，这是我踩过的坑。<br>J君这样的态度显然是着了所谓<code>“中国填鸭式教育”</code>的道，而我最终没有和J君一起堕落。</p>
<p>高二转了班，又碰见另一个同学，叫他Y好了。<br>Y学习十分刻苦努力，是个循规蹈矩的同学。我不知道每天Y要学习到几点，回家后是不是除了学习什么都不做这些我都无从知晓。但在学校我能见到的Y，除开早操这类无法用来学习的的时段，Y都在刻苦努力用功：上课认认真真记笔记，不用去拜读我也猜得出他一定是记下了老师在黑板上的每一个字，也许还包括错别字；下课认认真真写作业，遇到不会的——频率大概是每道题一次（除开那些做过的）——就来问班上那些学习好的同学，或者是老师，而丝毫不管他们是否在与别人聊天或者做一些最好不要轻易被打断的工作。<br>Y经常上课时问常常对老师讲的某个地方有疑问：不懂事什么意思，而实际上这个地方刚刚讲过，那时Y正在抄之前的板书——如果一字不落，你永远也不可能跟老师同步。</p>
<p>我时常感慨自己如果有Y一般用功那么没有什么我干不成，而Y本身，在我看来则一事无成。表面上看着用功努力，实则乏味死板——我称之为一种高级的懒惰，他的脑子除了用来死记硬背的部分，其余部分大概没有用过。</p>
<p><strong>这是学而不思</strong></p>
<p><code>“学而不思则罔，思而不学则殆”</code>，很多这样的句子我们耳濡目染，明白它们的意思，但就是不愿意仔细思量其中蕴含的道理。因为不懂其中的道理，我们多少都会在J和Y中间偏向一方，成为一个具有悲剧色彩的人。要么是怀才不遇，被埋膜了天才，要么内不得于心，外不应于器，三年不成章。</p>
<h2 id="千里马常有"><a href="#千里马常有" class="headerlink" title="千里马常有"></a>千里马常有</h2><p>我希望能够以之前所约定好的身份谈谈自己的感想，但又不愿意说教式地举纲列目。正如之前所说，文字是手指，而字里行间蕴含的道理是为明月。以手指指向明月多数时候会让人觉得手指就是月亮，<strong>不如引导你们自己去找。</strong></p>
<blockquote>
<p>胸有激雷而面如平湖者，可以拜上将军。</p>
</blockquote>
<p>这句话出自《孙子兵法》，愿与诸君共勉。</p>
]]></content>
      
        <categories>
            
            <category> 随笔 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 赠序 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[三年不成章]]></title>
      <url>https://blog.thrimbda.com/2016/11/23/%E4%B8%89%E5%B9%B4%E4%B8%8D%E6%88%90%E7%AB%A0/</url>
      <content type="html"><![CDATA[<blockquote>
<p>自从昨天下过雪后整个西安都冷了一倍。<br><del>冷了一倍就是说你要穿原来两倍厚的衣服</del></p>
</blockquote>
<p><img src="http://blog.thrimbda.com/uploads/2016/11/23/three_year_1.jpg" alt="2016.11.22 大雪中主楼A东侧的小路"></p>
<p>盗图一张，衬托一下这篇的主题。<br>我为什么要取这么个名字，是因为今天在吃过晚饭后从康桥回实验室的路上触景生情，想要抒怀一番。</p>
<a id="more"></a>
<h2 id="大学以来最大的雪（吗）"><a href="#大学以来最大的雪（吗）" class="headerlink" title="大学以来最大的雪（吗）"></a>大学以来最大的雪（吗）</h2><blockquote>
<p>其实今年1月31日下的雪更大。</p>
</blockquote>
<p>前天晚上在实验室过了夜，因为室内暖气空调一应俱全，而且我们几乎从来不开窗户，所以很暖和。只是在出去上厕所的时候觉得比平时冷了几分，天黑，什么都没多想。</p>
<p>——直到第二天早上迷糊中被冻醒，才迟钝地反应过来是下了雪。<br>雪下了一整天，直到晚上十一点多才停下。</p>
<p>可惜前天在实验室过夜是为了赶今天中午的ddl，于是下雪这天我在屋子里呆了一整天，直到晚上干完活，决定回寝室休息一晚上。卖夜宵的大叔大妈们精神可嘉，如此寒夜还依然出摊，我于是去支持了一下他们的工作。</p>
<p>美妙的雪景就这样被我<del><em>浪费掉</em></del>错过了。</p>
<h2 id="比下雪更有趣的是，哇哇叫的南方孩子"><a href="#比下雪更有趣的是，哇哇叫的南方孩子" class="headerlink" title="比下雪更有趣的是，哇哇叫的南方孩子"></a>比下雪更有趣的是，哇哇叫的南方孩子</h2><blockquote>
<p>上面这句话是在打趣了。</p>
</blockquote>
<p>我自己十分喜欢抒发感悟，动不动就要触景生情，感慨一番。</p>
<p>去年被同学叫去大雁塔，在音乐喷泉结束后原本熙熙攘攘的广场很快就空了下来，注视着古塔，心中感动了起来：<br>它在这里静静地站了一千年，相比之下人生真的是太短了。<del>而且寂寞如雪</del><br>一时间一种历史的厚重感扑面而来，我就这样被震撼着，品味着洪水般泛滥的情绪。</p>
<p>我们触景生情大概是因为心里有所感动，马可波罗在向忽必烈介绍城市菲利德时讲：</p>
<blockquote>
<p>如果你觉得两个拱廊之中的一个更为惬意，那是因为再三十年前曾有一个穿绣花裙宽袖衣服的姑娘走过那里，或者是因为那个拱廊在某一时刻里的光线使你联想起另外一个地方的什么拱廊。</p>
</blockquote>
<h2 id="仿佛一个观众，看的是别人的人生"><a href="#仿佛一个观众，看的是别人的人生" class="headerlink" title="仿佛一个观众，看的是别人的人生"></a>仿佛一个观众，看的是别人的人生</h2><blockquote>
<p>那天回去后心里很难过，为什么呢？</p>
</blockquote>
<p>太喜欢说大话，谈人生谈理想，大快人心！<br>安逸地坐在咖啡管里高谈阔论伤怀古今当然逍遥自在，但是之后若是不如同师文学琴一样<strong>得之于心，应之于器</strong>，那么就是不务正业。<br>我也想学朱自清说一句：今年我二十岁，真的是太聪明了。</p>
<p><strong>没有一点点沉淀又有什么好抒怀的。</strong><br>高中时候喜欢骂国家骂教育，说他们是工厂，量产出一批傻子。<br>可转念一想做一个这样的愤青，这样的言论并不能使得国家和教育有一丝一毫的改变。唯一能做到的就是宣泄心中的不满，然后继续苦海沉浮，庸碌不前，变成一个上述的傻子。</p>
<p>波罗在讲完所有自己游历过的城市后向大汗总结道：</p>
<blockquote>
<p>生者的地狱是不会出现的，如果真的有，那就是这里已经有的，是我们天天生活在其中的，是我们在一起集结而成的。<br>免遭痛苦的办法有两种，对于许多人，第一种很容易：接受地狱，成为它的一部分，直至感觉不到它的存在；第二种有风险，要求持久的警惕和学习：<strong>在地狱里寻找非地狱的人和物，学会辨别他们，使他们存在下去，赋予它们空间。</strong></p>
</blockquote>
<p>其实是上面的两段都是卡尔维诺借波罗的嘴说的。</p>
<h2 id="大学之大，在于文化"><a href="#大学之大，在于文化" class="headerlink" title="大学之大，在于文化"></a>大学之大，在于文化</h2><blockquote>
<p>这是我的高中化学老师口中鲁迅先生的一句话。</p>
</blockquote>
<p><strong>英国牛津的主教、牛津运动的发起人约翰·纽曼在他著名的演讲“大学的理念”中讲道：</strong></p>
<blockquote>
<p>先生们，如果让我必须在那种由老师管着、选够学分就能毕业的大学和那种没有教授和考试让年轻人在一起共同生活、互相学习三四年的大学中选择一种，我将毫不犹豫地选择后者……为什么呢？我是这样想的：当许多聪明、求知欲强、具有同情心而又目光敏锐的年轻人聚到一起，即使没有人教，他们也能互相学习。他们互相交流，了解到新的思想和看法、看到新鲜事物并且掌握独到的行为判断力。”</p>
</blockquote>
<p><em>虽然西交大是前一种制度，但这里或多或少地闪耀着后一种制度的光辉。</em></p>
<p>晚饭后走出康桥，哈了几口哈气。这天虽然冷啊，但是正值饭点，食堂门口非常热闹，广播里播放的是轻柔的音乐。<br>当我穿过人群时，每每听到人们的谈话，他们有的讨论着自己最新的研究方向，有的争论着一个关于力学的问题，还有的在讲关于什么东西的设计…心中竟有些感动，最终意识到我面前的诸位大多是未来的艺术家、科学家、工程师。</p>
<p>虽然是大雪过后，万物凋零的时节，但我却见到了前所未有的生机盎然。</p>
<p><strong>幸甚至哉，歌以咏志。</strong></p>
<h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>在ddl后存活下来的我长舒了一口气，写出这么一篇东西。</p>
]]></content>
      
        <categories>
            
            <category> 随笔 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 感悟 </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
